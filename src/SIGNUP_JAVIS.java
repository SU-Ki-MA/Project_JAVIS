
import java.awt.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.*;
import javax.swing.filechooser.FileNameExtensionFilter;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class SIGNUP_JAVIS extends javax.swing.JFrame {

    /**
     * Creates new form SIGNUP_JAVIS
     */
    public SIGNUP_JAVIS() {
        initComponents();
        Image i;
        try {
            i = ImageIO.read(getClass().getResource("Icons\\JAVIS_icon 512x512.png"));
            setIconImage(i);
        } catch (IOException ex) {
            Logger.getLogger(LOGIN_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        }

        jPback_tc.setBackground(new Color(34, 47, 62,230));
        jPback_pd.setBackground(new Color(34, 47, 62,230));
        jPback_p.setBackground(new Color(34, 47, 62,230));
        jPback_v.setBackground(new Color(34, 47, 62,230));
        jPsidepane.setBackground(new Color(53, 59, 72,255));
        setSelectpane(new JPanel[] {jPtc},new JLabel[] {jLBLtc_txt},new JLabel[] {jLBLtc_ind},new JLabel[] {jLBLtc_icon},new String[] {Itc2});
        setDeSelectpane(new JPanel[] {jPpd,jPp,jPv},new JLabel[] {jLBLpd_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLp_icon,jLBLv_icon},new String[] {Ipd1,Ip1,Iv1});        
        jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);
        jTFfirst_name.setCaretPosition(0);
        jTFfirst_name.setBackground(new Color(0,0,0,0));
        jTFlast_name.setBackground(new Color(0,0,0,0));
        jTFf_name.setBackground(new Color(0,0,0,0));
        jTFm_name.setBackground(new Color(0,0,0,0));
        jLBLexit.setBackground(new Color(0,0,0,0));
        jLBLminimize.setBackground(new Color(0,0,0,0));
        setselectgender(new JRadioButton[]{jRBmal},new JLabel[]{jLBLm_i},new JLabel[]{jLBLmale},new String[]{m1});
        setdeselectgender(new JRadioButton[] {jRBfem,jRBtra},new JLabel[] {jLBLf_i,jLBLt_i},new JLabel[] {jLBLfemale,jLBLtransgender},new String [] {f,t});
        jTFdob.setBackground(new Color(0,0,0,0));
        jTFage.setBackground(new Color(0,0,0,0));
        jTFusername.setBackground(new Color(0,0,0,0));
        jPFpassword.setBackground(new Color(0,0,0,0));
        jPFpassword.setEchoChar((char)0);
        jPsex.setBackground(new Color(34, 47, 62,230));
        jTFcaptcha.setBackground(new Color(0,0,0,0));
        jLBLh_1.setBorder(human_n);
        jLBLh_2.setBorder(human_n);
        jLBLh_3.setBorder(human_n);
        jLBLh_4.setBorder(human_n);
        jLBLh_5.setBorder(human_n);
        jLBLh_6.setBorder(human_n);
        clearcorrect();
        reload_human();
        jCHKverify_txt.setSelected(false);
        reload_captcha();
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTFfirst_name.setCaretColor(new Color(255,255,255));
        jTFlast_name.setCaretColor(new Color(255,255,255));
        jTFf_name.setCaretColor(new Color(255,255,255));
        jTFm_name.setCaretColor(new Color(255,255,255));
        jTFage.setCaretColor(new Color(255,255,255));
        jTFdob.setCaretColor(new Color(255,255,255));
        jTFusername.setCaretColor(new Color(255,255,255));
        jPFpassword.setCaretColor(new Color(255,255,255));
        jTFemail.setCaretColor(new Color(255,255,255));
        jTFcaptcha.setCaretColor(new Color(255,255,255));
        jTFemail.setBackground(new Color(0,0,0,0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jCHKdob = new javax.swing.JCheckBox();
        jCHKage = new javax.swing.JCheckBox();
        jCHKtc = new javax.swing.JCheckBox();
        jCHKpd = new javax.swing.JCheckBox();
        jCHKp = new javax.swing.JCheckBox();
        jCHKv = new javax.swing.JCheckBox();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLBLproloc = new javax.swing.JLabel();
        jCHKvis = new javax.swing.JCheckBox();
        jCHKh_1 = new javax.swing.JCheckBox();
        jCHKh_2 = new javax.swing.JCheckBox();
        jCHKh_3 = new javax.swing.JCheckBox();
        jCHKh_4 = new javax.swing.JCheckBox();
        jCHKh_5 = new javax.swing.JCheckBox();
        jCHKh_6 = new javax.swing.JCheckBox();
        jCHKagree = new javax.swing.JCheckBox();
        jLBLimg_verification = new javax.swing.JLabel();
        jLBLverification = new javax.swing.JLabel();
        jCHK_cor1 = new javax.swing.JCheckBox();
        jCHK_cor2 = new javax.swing.JCheckBox();
        jCHK_cor3 = new javax.swing.JCheckBox();
        jCHK_cor4 = new javax.swing.JCheckBox();
        jCHK_cor5 = new javax.swing.JCheckBox();
        jCHK_cor6 = new javax.swing.JCheckBox();
        jLBLhuman_imgdata = new javax.swing.JLabel();
        jCHKimg_verify = new javax.swing.JCheckBox();
        jLBLhuman_txtdata = new javax.swing.JLabel();
        jLBLcaptcha_cor = new javax.swing.JLabel();
        jCHKverify_txt = new javax.swing.JCheckBox();
        jPsidepane = new javax.swing.JPanel();
        jPtc = new javax.swing.JPanel();
        jLBLtc_ind = new javax.swing.JLabel();
        jLBLtc_icon = new javax.swing.JLabel();
        jLBLtc_txt = new javax.swing.JLabel();
        jPpd = new javax.swing.JPanel();
        jLBLpd_ind = new javax.swing.JLabel();
        jLBLpd_icon = new javax.swing.JLabel();
        jLBLpd_txt = new javax.swing.JLabel();
        jPp = new javax.swing.JPanel();
        jLBLp_ind = new javax.swing.JLabel();
        jLBLp_icon = new javax.swing.JLabel();
        jLBLp_txt = new javax.swing.JLabel();
        jPv = new javax.swing.JPanel();
        jLBLv_ind = new javax.swing.JLabel();
        jLBLv_icon = new javax.swing.JLabel();
        jLBLv_txt = new javax.swing.JLabel();
        jLBLjavis_icon_signup = new javax.swing.JLabel();
        jPback_tc = new javax.swing.JPanel();
        jLBLminimize = new javax.swing.JLabel();
        jLBLexit = new javax.swing.JLabel();
        jLBLtc_javis_icon = new javax.swing.JLabel();
        jLBLtc_project = new javax.swing.JLabel();
        jLBLl1 = new javax.swing.JLabel();
        jLBLl3 = new javax.swing.JLabel();
        jLBLl1_i = new javax.swing.JLabel();
        jLBLl2_i = new javax.swing.JLabel();
        jLBLl2 = new javax.swing.JLabel();
        jLBLl4 = new javax.swing.JLabel();
        jLBLl3_i = new javax.swing.JLabel();
        jLBLl5 = new javax.swing.JLabel();
        jLBLl4_i = new javax.swing.JLabel();
        jLBLl6 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLBLl7 = new javax.swing.JLabel();
        jLBLl8 = new javax.swing.JLabel();
        jLBLiagree = new javax.swing.JLabel();
        jLBLagree = new javax.swing.JLabel();
        jLBLnp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPback_pd = new javax.swing.JPanel();
        jTFlast_name = new javax.swing.JTextField();
        jTFfirst_name = new javax.swing.JTextField();
        jSepfn = new javax.swing.JSeparator();
        jSep_sn = new javax.swing.JSeparator();
        jLBLminimize1 = new javax.swing.JLabel();
        jLBLexit1 = new javax.swing.JLabel();
        jTFf_name = new javax.swing.JTextField();
        jSepf_n = new javax.swing.JSeparator();
        jTFm_name = new javax.swing.JTextField();
        jSepm_n = new javax.swing.JSeparator();
        jPsex = new javax.swing.JPanel();
        jPmale = new javax.swing.JPanel();
        jLBLm_i = new javax.swing.JLabel();
        jRBmal = new javax.swing.JRadioButton();
        jLBLmale = new javax.swing.JLabel();
        jPfemale = new javax.swing.JPanel();
        jLBLf_i = new javax.swing.JLabel();
        jLBLfemale = new javax.swing.JLabel();
        jRBfem = new javax.swing.JRadioButton();
        jPtransgender = new javax.swing.JPanel();
        jRBtra = new javax.swing.JRadioButton();
        jLBLt_i = new javax.swing.JLabel();
        jLBLtransgender = new javax.swing.JLabel();
        jLBLn_age = new javax.swing.JLabel();
        jLBLn_sex = new javax.swing.JLabel();
        jTFage = new javax.swing.JTextField();
        jSepage = new javax.swing.JSeparator();
        jTFdob = new javax.swing.JTextField();
        jSepdob = new javax.swing.JSeparator();
        jDCdob = new com.toedter.calendar.JDateChooser();
        jLBLdob = new javax.swing.JLabel();
        jLBLprevious_pd = new javax.swing.JLabel();
        jLBLnext_pd = new javax.swing.JLabel();
        jLBLosk = new javax.swing.JLabel();
        jPback_p = new javax.swing.JPanel();
        jLBLminimize2 = new javax.swing.JLabel();
        jLBLexit2 = new javax.swing.JLabel();
        jTFusername = new javax.swing.JTextField();
        jSusername = new javax.swing.JSeparator();
        jPFpassword = new javax.swing.JPasswordField();
        jSpassword = new javax.swing.JSeparator();
        jPprofie_browse = new javax.swing.JPanel();
        jPbrowse = new javax.swing.JPanel();
        jLBLbrowse = new javax.swing.JLabel();
        jLBLi_browse = new javax.swing.JLabel();
        jPprofile_pic = new javax.swing.JPanel();
        jLBLprofile_pic = new javax.swing.JLabel();
        jLBLosk1 = new javax.swing.JLabel();
        jLBLvis = new javax.swing.JLabel();
        jLBLprevious_p = new javax.swing.JLabel();
        jLBLnext_p = new javax.swing.JLabel();
        jTFemail = new javax.swing.JTextField();
        jSusername1 = new javax.swing.JSeparator();
        jLBLuser_availability = new javax.swing.JLabel();
        jLBLvis1 = new javax.swing.JLabel();
        jPback_v = new javax.swing.JPanel();
        jLBLminimize3 = new javax.swing.JLabel();
        jLBLexit3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLBLh_2 = new javax.swing.JLabel();
        jLBLh_4 = new javax.swing.JLabel();
        jLBLh_5 = new javax.swing.JLabel();
        jLBLh_3 = new javax.swing.JLabel();
        jLBLh_1 = new javax.swing.JLabel();
        jLBLh_6 = new javax.swing.JLabel();
        jLBLhuman_img_text = new javax.swing.JLabel();
        jLBLreload_captcha = new javax.swing.JLabel();
        jLBL_success_img = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLBLcaptcha = new javax.swing.JLabel();
        jLBLreload_img = new javax.swing.JLabel();
        jTFcaptcha = new javax.swing.JTextField();
        jScaptcha = new javax.swing.JSeparator();
        jPverify_text = new javax.swing.JPanel();
        jLBLverify_icon_text = new javax.swing.JLabel();
        jLBLverify_text = new javax.swing.JLabel();
        jPverify_img = new javax.swing.JPanel();
        jLBLverify_icon_img = new javax.swing.JLabel();
        jLBLverify_img = new javax.swing.JLabel();
        jLBLverified_txt = new javax.swing.JLabel();
        jLBLprevious_v = new javax.swing.JLabel();
        jPsignup = new javax.swing.JPanel();
        jLBLsignup_icon = new javax.swing.JLabel();
        jLBLsignup = new javax.swing.JLabel();
        jLBLcontain_data = new javax.swing.JLabel();
        jLBLback = new javax.swing.JLabel();

        jCHKdob.setText("jCheckBox1");

        jCHKage.setText("jCheckBox1");

        buttonGroup2.add(jCHKtc);
        jCHKtc.setText("jCheckBox1");

        buttonGroup2.add(jCHKpd);
        jCHKpd.setText("jCheckBox2");

        buttonGroup2.add(jCHKp);
        jCHKp.setText("jCheckBox3");

        buttonGroup2.add(jCHKv);
        jCHKv.setText("jCheckBox4");

        jCHKvis.setText("jCheckBox1");

        jCHKh_1.setText("jCheckBox1");

        jCHKh_2.setText("jCheckBox2");

        jCHKh_3.setText("jCheckBox3");

        jCHKh_4.setText("jCheckBox4");

        jCHKh_5.setText("jCheckBox5");

        jCHKh_6.setText("jCheckBox6");

        jCHKagree.setText("jCheckBox1");

        jLBLimg_verification.setText("jLabel7");

        jLBLverification.setText("jLabel8");

        jCHK_cor1.setSelected(true);
        jCHK_cor1.setText("jCheckBox1");

        jCHK_cor2.setSelected(true);
        jCHK_cor2.setText("jCheckBox2");

        jCHK_cor3.setText("jCheckBox3");

        jCHK_cor4.setSelected(true);
        jCHK_cor4.setText("jCheckBox4");

        jCHK_cor5.setSelected(true);
        jCHK_cor5.setText("jCheckBox5");

        jCHK_cor6.setText("jCheckBox6");

        jLBLhuman_imgdata.setText("c");

        jCHKimg_verify.setText("jCheckBox1");

        jLBLhuman_txtdata.setText("a");

        jLBLcaptcha_cor.setText("v4xBGx");

        jCHKverify_txt.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPsidepane.setBackground(new java.awt.Color(53, 59, 72));
        jPsidepane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPsidepaneMouseDragged(evt);
            }
        });
        jPsidepane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPsidepaneMousePressed(evt);
            }
        });

        jPtc.setBackground(new java.awt.Color(53, 59, 72));
        jPtc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPtcMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPtcMouseReleased(evt);
            }
        });

        jLBLtc_ind.setBackground(new java.awt.Color(53, 59, 72));
        jLBLtc_ind.setOpaque(true);
        jLBLtc_ind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLtc_indMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLtc_indMouseReleased(evt);
            }
        });

        jLBLtc_icon.setBackground(new java.awt.Color(53, 59, 72));
        jLBLtc_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Test_Passed_32px.png"))); // NOI18N
        jLBLtc_icon.setOpaque(true);
        jLBLtc_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLtc_iconMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLtc_iconMouseReleased(evt);
            }
        });

        jLBLtc_txt.setBackground(new java.awt.Color(53, 59, 72));
        jLBLtc_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLBLtc_txt.setForeground(new java.awt.Color(150, 150, 150));
        jLBLtc_txt.setText("Terms & Conditions");
        jLBLtc_txt.setOpaque(true);
        jLBLtc_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLtc_txtMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLtc_txtMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPtcLayout = new javax.swing.GroupLayout(jPtc);
        jPtc.setLayout(jPtcLayout);
        jPtcLayout.setHorizontalGroup(
            jPtcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPtcLayout.createSequentialGroup()
                .addComponent(jLBLtc_ind, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLtc_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLtc_txt)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPtcLayout.setVerticalGroup(
            jPtcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLtc_ind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLBLtc_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPtcLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLtc_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPpd.setBackground(new java.awt.Color(53, 59, 72));
        jPpd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPpdMouseReleased(evt);
            }
        });

        jLBLpd_ind.setBackground(new java.awt.Color(53, 59, 72));
        jLBLpd_ind.setOpaque(true);
        jLBLpd_ind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLpd_indMouseReleased(evt);
            }
        });

        jLBLpd_icon.setBackground(new java.awt.Color(53, 59, 72));
        jLBLpd_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Contact_Details_32px.png"))); // NOI18N
        jLBLpd_icon.setOpaque(true);
        jLBLpd_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLpd_iconMouseReleased(evt);
            }
        });

        jLBLpd_txt.setBackground(new java.awt.Color(53, 59, 72));
        jLBLpd_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLBLpd_txt.setForeground(new java.awt.Color(150, 150, 150));
        jLBLpd_txt.setText("Personnel Details");
        jLBLpd_txt.setOpaque(true);
        jLBLpd_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLpd_txtMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPpdLayout = new javax.swing.GroupLayout(jPpd);
        jPpd.setLayout(jPpdLayout);
        jPpdLayout.setHorizontalGroup(
            jPpdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPpdLayout.createSequentialGroup()
                .addComponent(jLBLpd_ind, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLpd_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLpd_txt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPpdLayout.setVerticalGroup(
            jPpdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLpd_ind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLBLpd_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
            .addGroup(jPpdLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLpd_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPp.setBackground(new java.awt.Color(53, 59, 72));
        jPp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPpMouseReleased(evt);
            }
        });

        jLBLp_ind.setBackground(new java.awt.Color(53, 59, 72));
        jLBLp_ind.setOpaque(true);
        jLBLp_ind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLp_indMouseReleased(evt);
            }
        });

        jLBLp_icon.setBackground(new java.awt.Color(53, 59, 72));
        jLBLp_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Male_User_32px_3.png"))); // NOI18N
        jLBLp_icon.setOpaque(true);
        jLBLp_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLp_iconMouseReleased(evt);
            }
        });

        jLBLp_txt.setBackground(new java.awt.Color(53, 59, 72));
        jLBLp_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLBLp_txt.setForeground(new java.awt.Color(150, 150, 150));
        jLBLp_txt.setText("Profile");
        jLBLp_txt.setOpaque(true);
        jLBLp_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLp_txtMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPpLayout = new javax.swing.GroupLayout(jPp);
        jPp.setLayout(jPpLayout);
        jPpLayout.setHorizontalGroup(
            jPpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPpLayout.createSequentialGroup()
                .addComponent(jLBLp_ind, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLp_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLp_txt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPpLayout.setVerticalGroup(
            jPpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLp_ind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLBLp_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
            .addGroup(jPpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLp_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPv.setBackground(new java.awt.Color(53, 59, 72));
        jPv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPvMouseReleased(evt);
            }
        });

        jLBLv_ind.setBackground(new java.awt.Color(53, 59, 72));
        jLBLv_ind.setOpaque(true);
        jLBLv_ind.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLv_indMouseReleased(evt);
            }
        });

        jLBLv_icon.setBackground(new java.awt.Color(53, 59, 72));
        jLBLv_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_ID_Verified_32px_1.png"))); // NOI18N
        jLBLv_icon.setOpaque(true);
        jLBLv_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLv_iconMouseReleased(evt);
            }
        });

        jLBLv_txt.setBackground(new java.awt.Color(53, 59, 72));
        jLBLv_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLBLv_txt.setForeground(new java.awt.Color(150, 150, 150));
        jLBLv_txt.setText("Verification");
        jLBLv_txt.setOpaque(true);
        jLBLv_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLBLv_txtMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPvLayout = new javax.swing.GroupLayout(jPv);
        jPv.setLayout(jPvLayout);
        jPvLayout.setHorizontalGroup(
            jPvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPvLayout.createSequentialGroup()
                .addComponent(jLBLv_ind, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLv_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLv_txt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPvLayout.setVerticalGroup(
            jPvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLv_ind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLBLv_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
            .addGroup(jPvLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLv_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLBLjavis_icon_signup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBLjavis_icon_signup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/JAVIS_icon _65x65.png"))); // NOI18N

        javax.swing.GroupLayout jPsidepaneLayout = new javax.swing.GroupLayout(jPsidepane);
        jPsidepane.setLayout(jPsidepaneLayout);
        jPsidepaneLayout.setHorizontalGroup(
            jPsidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPtc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPpd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPsidepaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLjavis_icon_signup, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPsidepaneLayout.setVerticalGroup(
            jPsidepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPsidepaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLjavis_icon_signup, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPtc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPpd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        getContentPane().add(jPsidepane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, -1));

        jPback_tc.setBackground(new java.awt.Color(34, 47, 62));

        jLBLminimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Minimize_Window_32px_1.png"))); // NOI18N
        jLBLminimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLminimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLminimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLminimizeMouseExited(evt);
            }
        });

        jLBLexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Cancel_32px.png"))); // NOI18N
        jLBLexit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLexitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLexitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLexitMouseExited(evt);
            }
        });

        jLBLtc_javis_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/JAVIS_icon_150x150.png"))); // NOI18N
        jLBLtc_javis_icon.setToolTipText("");

        jLBLtc_project.setFont(new java.awt.Font("Space Age", 0, 24)); // NOI18N
        jLBLtc_project.setForeground(new java.awt.Color(0, 185, 165));
        jLBLtc_project.setText("PROJECT");

        jLBLl1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl1.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl1.setText("JAVIS (Java Advanced Virtual Integrated Systems) is a user friendly ");

        jLBLl3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl3.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl3.setText("Your accounts are secured with advanced end to end encryption");

        jLBLl1_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Module_25px.png"))); // NOI18N

        jLBLl2_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Module_25px.png"))); // NOI18N

        jLBLl2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl2.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl2.setText("environment for knowledge and entertainment. ");

        jLBLl4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl4.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl4.setText("with complex algorithim.");

        jLBLl3_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Module_25px.png"))); // NOI18N

        jLBLl5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl5.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl5.setText("Simple and friendly UI.");

        jLBLl4_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Module_25px.png"))); // NOI18N

        jLBLl6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl6.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl6.setText("DISCLAIMER this is an Open Sourse Software developed  for");

        jLabel20.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 185, 165));

        jLBLl7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl7.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl7.setText("educational purpose only, hence source code is available ");

        jLBLl8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLl8.setForeground(new java.awt.Color(0, 185, 165));
        jLBLl8.setText("in the documetation but do not duplicate data in any means.");

        jLBLiagree.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLBLiagree.setForeground(new java.awt.Color(156, 212, 199));
        jLBLiagree.setText("I Agree");

        jLBLagree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Round_25px.png"))); // NOI18N
        jLBLagree.setToolTipText("I agree to the above Terms and Conditions");
        jLBLagree.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLagree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLagreeMouseClicked(evt);
            }
        });

        jLBLnp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Next_page_50px.png"))); // NOI18N
        jLBLnp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLnp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLnpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLnpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLnpMouseExited(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(34, 35, 47));
        jLabel1.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(27, 188, 155));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sign In");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPback_tcLayout = new javax.swing.GroupLayout(jPback_tc);
        jPback_tc.setLayout(jPback_tcLayout);
        jPback_tcLayout.setHorizontalGroup(
            jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPback_tcLayout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPback_tcLayout.createSequentialGroup()
                            .addComponent(jLBLtc_javis_icon)
                            .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPback_tcLayout.createSequentialGroup()
                                    .addGap(389, 389, 389)
                                    .addComponent(jLBLminimize))
                                .addGroup(jPback_tcLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLBLtc_project)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLBLexit))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_tcLayout.createSequentialGroup()
                            .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLBLl2_i, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLBLl1_i, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLBLl3_i, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLBLl4_i))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLBLl1)
                                .addComponent(jLBLl2)
                                .addComponent(jLBLl4)
                                .addComponent(jLBLl5)
                                .addComponent(jLBLl6)
                                .addComponent(jLBLl7)
                                .addComponent(jLBLl8)
                                .addComponent(jLBLl3)
                                .addGroup(jPback_tcLayout.createSequentialGroup()
                                    .addComponent(jLBLiagree, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLBLagree)
                                    .addGap(178, 178, 178)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(47, 47, 47)))
                    .addGroup(jPback_tcLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLBLnp, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        jPback_tcLayout.setVerticalGroup(
            jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPback_tcLayout.createSequentialGroup()
                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPback_tcLayout.createSequentialGroup()
                        .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLBLminimize)
                            .addComponent(jLBLexit))
                        .addGap(5, 5, 5)
                        .addComponent(jLBLtc_project, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLBLtc_javis_icon, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBLl1_i)
                    .addComponent(jLBLl1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLBLl2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPback_tcLayout.createSequentialGroup()
                        .addComponent(jLBLl3)
                        .addGap(0, 0, 0)
                        .addComponent(jLBLl4))
                    .addComponent(jLBLl2_i))
                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_tcLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLBLnp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPback_tcLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPback_tcLayout.createSequentialGroup()
                                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLBLl5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLBLl3_i, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPback_tcLayout.createSequentialGroup()
                                        .addComponent(jLBLl6)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLBLl7)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLBLl8))
                                    .addComponent(jLBLl4_i))
                                .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPback_tcLayout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel20))
                                    .addGroup(jPback_tcLayout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(jPback_tcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLBLagree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLBLiagree, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(23, Short.MAX_VALUE))))
        );

        getContentPane().add(jPback_tc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        jPback_pd.setBackground(new java.awt.Color(34, 47, 62));
        jPback_pd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTFlast_name.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFlast_name.setForeground(new java.awt.Color(125, 125, 125));
        jTFlast_name.setText("Last Name");
        jTFlast_name.setToolTipText("Enter Your Last Name");
        jTFlast_name.setBorder(null);
        jTFlast_name.setOpaque(false);
        jTFlast_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFlast_nameMousePressed(evt);
            }
        });
        jTFlast_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFlast_nameActionPerformed(evt);
            }
        });
        jTFlast_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFlast_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFlast_nameKeyReleased(evt);
            }
        });
        jPback_pd.add(jTFlast_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 90, 213, 44));

        jTFfirst_name.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFfirst_name.setForeground(new java.awt.Color(125, 125, 125));
        jTFfirst_name.setText("First Name"); // NOI18N
        jTFfirst_name.setToolTipText("Enter Your First Name");
        jTFfirst_name.setBorder(null);
        jTFfirst_name.setOpaque(false);
        jTFfirst_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFfirst_nameMousePressed(evt);
            }
        });
        jTFfirst_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFfirst_nameActionPerformed(evt);
            }
        });
        jTFfirst_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFfirst_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFfirst_nameKeyReleased(evt);
            }
        });
        jPback_pd.add(jTFfirst_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 38, 213, 44));
        jTFfirst_name.getAccessibleContext().setAccessibleName("");

        jPback_pd.add(jSepfn, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 80, 213, 10));
        jPback_pd.add(jSep_sn, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 140, 213, 10));

        jLBLminimize1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Minimize_Window_32px_1.png"))); // NOI18N
        jLBLminimize1.setToolTipText("Minimize");
        jLBLminimize1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLminimize1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLminimize1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLminimize1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLminimize1MouseExited(evt);
            }
        });
        jPback_pd.add(jLBLminimize1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, -1, -1));

        jLBLexit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Cancel_32px.png"))); // NOI18N
        jLBLexit1.setToolTipText("Exit");
        jLBLexit1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLexit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLexit1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLexit1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLexit1MouseExited(evt);
            }
        });
        jPback_pd.add(jLBLexit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(768, 0, -1, -1));

        jTFf_name.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFf_name.setForeground(new java.awt.Color(125, 125, 125));
        jTFf_name.setText("Father's Name"); // NOI18N
        jTFf_name.setToolTipText("Enter Your Father's Name");
        jTFf_name.setBorder(null);
        jTFf_name.setOpaque(false);
        jTFf_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFf_nameMousePressed(evt);
            }
        });
        jTFf_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFf_nameActionPerformed(evt);
            }
        });
        jTFf_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFf_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFf_nameKeyReleased(evt);
            }
        });
        jPback_pd.add(jTFf_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 213, 44));
        jPback_pd.add(jSepf_n, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 213, 10));

        jTFm_name.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFm_name.setForeground(new java.awt.Color(125, 125, 125));
        jTFm_name.setText("Mother's Name");
        jTFm_name.setToolTipText("Enter Your Mother's Name");
        jTFm_name.setBorder(null);
        jTFm_name.setOpaque(false);
        jTFm_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFm_nameMousePressed(evt);
            }
        });
        jTFm_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFm_nameActionPerformed(evt);
            }
        });
        jTFm_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFm_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFm_nameKeyReleased(evt);
            }
        });
        jPback_pd.add(jTFm_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 213, 44));
        jPback_pd.add(jSepm_n, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 213, 10));

        jPsex.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160), 2));
        jPsex.setOpaque(false);

        jPmale.setToolTipText("Male");
        jPmale.setOpaque(false);
        jPmale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPmaleMouseClicked(evt);
            }
        });

        jLBLm_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Male_32px.png"))); // NOI18N
        jLBLm_i.setToolTipText("Male");
        jLBLm_i.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLm_iMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRBmal);
        jRBmal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jRBmal.setForeground(new java.awt.Color(255, 255, 255));
        jRBmal.setSelected(true);
        jRBmal.setToolTipText("Male");
        jRBmal.setOpaque(false);
        jRBmal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBmalMouseClicked(evt);
            }
        });

        jLBLmale.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLBLmale.setForeground(new java.awt.Color(125, 125, 125));
        jLBLmale.setText("Male");
        jLBLmale.setToolTipText("Male");
        jLBLmale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLmaleMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPmaleLayout = new javax.swing.GroupLayout(jPmale);
        jPmale.setLayout(jPmaleLayout);
        jPmaleLayout.setHorizontalGroup(
            jPmaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPmaleLayout.createSequentialGroup()
                .addComponent(jRBmal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLm_i, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLmale, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPmaleLayout.setVerticalGroup(
            jPmaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jRBmal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLBLm_i, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
            .addComponent(jLBLmale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPfemale.setToolTipText("Female");
        jPfemale.setOpaque(false);
        jPfemale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPfemaleMouseClicked(evt);
            }
        });

        jLBLf_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Female_32px.png"))); // NOI18N
        jLBLf_i.setToolTipText("Female");
        jLBLf_i.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLf_iMouseClicked(evt);
            }
        });

        jLBLfemale.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLBLfemale.setForeground(new java.awt.Color(125, 125, 125));
        jLBLfemale.setText("Female");
        jLBLfemale.setToolTipText("Female");
        jLBLfemale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLfemaleMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRBfem);
        jRBfem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jRBfem.setForeground(new java.awt.Color(255, 255, 255));
        jRBfem.setToolTipText("Female");
        jRBfem.setOpaque(false);
        jRBfem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBfemMouseClicked(evt);
            }
        });
        jRBfem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBfemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPfemaleLayout = new javax.swing.GroupLayout(jPfemale);
        jPfemale.setLayout(jPfemaleLayout);
        jPfemaleLayout.setHorizontalGroup(
            jPfemaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPfemaleLayout.createSequentialGroup()
                .addComponent(jRBfem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLf_i)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLBLfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPfemaleLayout.setVerticalGroup(
            jPfemaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPfemaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jRBfem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLBLf_i))
            .addComponent(jLBLfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPtransgender.setToolTipText("Transgender");
        jPtransgender.setOpaque(false);
        jPtransgender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPtransgenderMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRBtra);
        jRBtra.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jRBtra.setForeground(new java.awt.Color(255, 255, 255));
        jRBtra.setToolTipText("Transgender");
        jRBtra.setOpaque(false);
        jRBtra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBtraMouseClicked(evt);
            }
        });
        jRBtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtraActionPerformed(evt);
            }
        });

        jLBLt_i.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Transgender_32px.png"))); // NOI18N
        jLBLt_i.setToolTipText("Transgender");
        jLBLt_i.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLt_iMouseClicked(evt);
            }
        });

        jLBLtransgender.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLBLtransgender.setForeground(new java.awt.Color(125, 125, 125));
        jLBLtransgender.setText("Transgender");
        jLBLtransgender.setToolTipText("Transgender");
        jLBLtransgender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLtransgenderMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPtransgenderLayout = new javax.swing.GroupLayout(jPtransgender);
        jPtransgender.setLayout(jPtransgenderLayout);
        jPtransgenderLayout.setHorizontalGroup(
            jPtransgenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPtransgenderLayout.createSequentialGroup()
                .addComponent(jRBtra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLt_i)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLBLtransgender)
                .addContainerGap())
        );
        jPtransgenderLayout.setVerticalGroup(
            jPtransgenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLt_i, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLBLtransgender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jRBtra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPsexLayout = new javax.swing.GroupLayout(jPsex);
        jPsex.setLayout(jPsexLayout);
        jPsexLayout.setHorizontalGroup(
            jPsexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPtransgender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPfemale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPmale, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPsexLayout.setVerticalGroup(
            jPsexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPsexLayout.createSequentialGroup()
                .addComponent(jPmale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPfemale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPtransgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPback_pd.add(jPsex, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 190, 120));

        jLBLn_age.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLBLn_age.setForeground(new java.awt.Color(255, 255, 255));
        jLBLn_age.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBLn_age.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Puzzled_35px.png"))); // NOI18N
        jLBLn_age.setToolTipText("Having problem in computing your Age?");
        jLBLn_age.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLn_age.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLn_ageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLn_ageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLn_ageMouseExited(evt);
            }
        });
        jPback_pd.add(jLBLn_age, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 40, 40));

        jLBLn_sex.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLBLn_sex.setForeground(new java.awt.Color(255, 255, 255));
        jLBLn_sex.setText("Sex");
        jPback_pd.add(jLBLn_sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 40, 30));

        jTFage.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFage.setForeground(new java.awt.Color(125, 125, 125));
        jTFage.setText("Age");
        jTFage.setToolTipText("Enter Your Age");
        jTFage.setBorder(null);
        jTFage.setOpaque(false);
        jTFage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFageMousePressed(evt);
            }
        });
        jTFage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFageActionPerformed(evt);
            }
        });
        jTFage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFageKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFageKeyTyped(evt);
            }
        });
        jPback_pd.add(jTFage, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 110, 40));
        jPback_pd.add(jSepage, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 110, 10));

        jTFdob.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFdob.setForeground(new java.awt.Color(125, 125, 125));
        jTFdob.setText("DOB");
        jTFdob.setToolTipText("Enter Your Date Of Birth");
        jTFdob.setBorder(null);
        jTFdob.setOpaque(false);
        jTFdob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFdobMousePressed(evt);
            }
        });
        jTFdob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFdobActionPerformed(evt);
            }
        });
        jTFdob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFdobKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFdobKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFdobKeyTyped(evt);
            }
        });
        jPback_pd.add(jTFdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 160, 40));
        jPback_pd.add(jSepdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 160, 10));

        jDCdob.setToolTipText("Select your DOB");
        jDCdob.setDateFormatString("yyyy-MM-dd");
        jDCdob.setOpaque(false);
        jPback_pd.add(jDCdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 20, 40));

        jLBLdob.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Ok_35px.png"))); // NOI18N
        jLBLdob.setToolTipText("Fix Date");
        jLBLdob.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLdob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLdobMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLdobMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLdobMouseExited(evt);
            }
        });
        jPback_pd.add(jLBLdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, -1, 40));

        jLBLprevious_pd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Back_To_50px.png"))); // NOI18N
        jLBLprevious_pd.setToolTipText("Previous Page");
        jLBLprevious_pd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLprevious_pd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLprevious_pdMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLprevious_pdMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLprevious_pdMouseExited(evt);
            }
        });
        jPback_pd.add(jLBLprevious_pd, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, -1, 50));

        jLBLnext_pd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Next_page_50px.png"))); // NOI18N
        jLBLnext_pd.setToolTipText("Next Page");
        jLBLnext_pd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLnext_pd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLnext_pdMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLnext_pdMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLnext_pdMouseExited(evt);
            }
        });
        jPback_pd.add(jLBLnext_pd, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 390, -1, 50));

        jLBLosk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Keyboard_64px.png"))); // NOI18N
        jLBLosk.setToolTipText("Use On Screen Keyboard");
        jLBLosk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLosk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLoskMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLoskMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLoskMouseExited(evt);
            }
        });
        jPback_pd.add(jLBLosk, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, -1, 40));

        getContentPane().add(jPback_pd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        jPback_p.setBackground(new java.awt.Color(34, 47, 62));

        jLBLminimize2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Minimize_Window_32px_1.png"))); // NOI18N
        jLBLminimize2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLminimize2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLminimize2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLminimize2MouseExited(evt);
            }
        });

        jLBLexit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Cancel_32px.png"))); // NOI18N
        jLBLexit2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLexit2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLexit2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLexit2MouseExited(evt);
            }
        });

        jTFusername.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFusername.setForeground(new java.awt.Color(125, 125, 125));
        jTFusername.setText("User Name");
        jTFusername.setToolTipText("Enter Your User Name");
        jTFusername.setBorder(null);
        jTFusername.setOpaque(false);
        jTFusername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFusernameMousePressed(evt);
            }
        });
        jTFusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFusernameActionPerformed(evt);
            }
        });
        jTFusername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFusernameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFusernameKeyReleased(evt);
            }
        });

        jPFpassword.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jPFpassword.setForeground(new java.awt.Color(125, 125, 125));
        jPFpassword.setText("Password");
        jPFpassword.setToolTipText("Enter Your Password");
        jPFpassword.setBorder(null);
        jPFpassword.setOpaque(false);
        jPFpassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPFpasswordMousePressed(evt);
            }
        });
        jPFpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPFpasswordActionPerformed(evt);
            }
        });
        jPFpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPFpasswordKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPFpasswordKeyReleased(evt);
            }
        });

        jPprofie_browse.setOpaque(false);

        jPbrowse.setToolTipText("Browse your profile pic");
        jPbrowse.setOpaque(false);
        jPbrowse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPbrowseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPbrowseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPbrowseMouseExited(evt);
            }
        });

        jLBLbrowse.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLBLbrowse.setForeground(new java.awt.Color(121, 121, 121));
        jLBLbrowse.setText("Browse");
        jLBLbrowse.setToolTipText("Browse your profile pic");
        jLBLbrowse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLbrowseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLbrowseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLbrowseMouseExited(evt);
            }
        });

        jLBLi_browse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Search_Folder_35px.png"))); // NOI18N
        jLBLi_browse.setToolTipText("Browse your profile pic");
        jLBLi_browse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLi_browseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLi_browseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLi_browseMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPbrowseLayout = new javax.swing.GroupLayout(jPbrowse);
        jPbrowse.setLayout(jPbrowseLayout);
        jPbrowseLayout.setHorizontalGroup(
            jPbrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPbrowseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBLbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLi_browse))
        );
        jPbrowseLayout.setVerticalGroup(
            jPbrowseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPbrowseLayout.createSequentialGroup()
                .addComponent(jLBLi_browse)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLBLbrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPprofile_pic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(121, 121, 121), 2, true));
        jPprofile_pic.setOpaque(false);
        jPprofile_pic.setPreferredSize(new java.awt.Dimension(124, 213));
        jPprofile_pic.setLayout(new javax.swing.BoxLayout(jPprofile_pic, javax.swing.BoxLayout.LINE_AXIS));

        jLBLprofile_pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Add_User_Male_100px.png"))); // NOI18N
        jLBLprofile_pic.setToolTipText("Profile Pic");
        jPprofile_pic.add(jLBLprofile_pic);

        javax.swing.GroupLayout jPprofie_browseLayout = new javax.swing.GroupLayout(jPprofie_browse);
        jPprofie_browse.setLayout(jPprofie_browseLayout);
        jPprofie_browseLayout.setHorizontalGroup(
            jPprofie_browseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPprofie_browseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPprofie_browseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPprofie_browseLayout.createSequentialGroup()
                        .addComponent(jPbrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPprofie_browseLayout.createSequentialGroup()
                        .addComponent(jPprofile_pic, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        jPprofie_browseLayout.setVerticalGroup(
            jPprofie_browseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPprofie_browseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPprofile_pic, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLBLosk1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Keyboard_64px.png"))); // NOI18N
        jLBLosk1.setToolTipText("Use On Screen Keyboard");
        jLBLosk1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLosk1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLosk1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLosk1MouseExited(evt);
            }
        });

        jLBLvis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBLvis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Eye_32px_1.png"))); // NOI18N
        jLBLvis.setToolTipText("Password Visible \\ Not Vsible");
        jLBLvis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLvisMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLvisMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLvisMouseExited(evt);
            }
        });

        jLBLprevious_p.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Back_To_50px.png"))); // NOI18N
        jLBLprevious_p.setToolTipText("Previous Page");
        jLBLprevious_p.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLprevious_p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLprevious_pMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLprevious_pMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLprevious_pMouseExited(evt);
            }
        });

        jLBLnext_p.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Next_page_50px.png"))); // NOI18N
        jLBLnext_p.setToolTipText("Next Page");
        jLBLnext_p.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLnext_p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLnext_pMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLnext_pMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLnext_pMouseExited(evt);
            }
        });

        jTFemail.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFemail.setForeground(new java.awt.Color(125, 125, 125));
        jTFemail.setText("e-mail ID");
        jTFemail.setToolTipText("Enter Your Email-ID");
        jTFemail.setBorder(null);
        jTFemail.setOpaque(false);
        jTFemail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFemailMousePressed(evt);
            }
        });
        jTFemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFemailActionPerformed(evt);
            }
        });
        jTFemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFemailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFemailKeyReleased(evt);
            }
        });

        jLBLuser_availability.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBLuser_availability.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Find_User_Male_32px_1.png"))); // NOI18N
        jLBLuser_availability.setToolTipText("Check weather the username is available");
        jLBLuser_availability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLuser_availabilityMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLuser_availabilityMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLuser_availabilityMouseExited(evt);
            }
        });

        jLBLvis1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBLvis1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Puzzled_32px_2.png"))); // NOI18N
        jLBLvis1.setToolTipText("check the format ?");
        jLBLvis1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLvis1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLvis1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLvis1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLvis1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPback_pLayout = new javax.swing.GroupLayout(jPback_p);
        jPback_p.setLayout(jPback_pLayout);
        jPback_pLayout.setHorizontalGroup(
            jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_pLayout.createSequentialGroup()
                .addGap(0, 730, Short.MAX_VALUE)
                .addComponent(jLBLminimize2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLexit2))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_pLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_pLayout.createSequentialGroup()
                        .addComponent(jLBLprevious_p)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLBLnext_p))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_pLayout.createSequentialGroup()
                        .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSusername)
                            .addComponent(jSpassword)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_pLayout.createSequentialGroup()
                                .addComponent(jPFpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLBLvis, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPback_pLayout.createSequentialGroup()
                                .addComponent(jTFusername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLBLuser_availability, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLBLosk1)
                            .addComponent(jSusername1)
                            .addGroup(jPback_pLayout.createSequentialGroup()
                                .addComponent(jTFemail, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLBLvis1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(62, 62, 62)
                        .addComponent(jPprofie_browse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPback_pLayout.setVerticalGroup(
            jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_pLayout.createSequentialGroup()
                .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBLminimize2)
                    .addComponent(jLBLexit2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPback_pLayout.createSequentialGroup()
                        .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPback_pLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTFusername, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(jLBLuser_availability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSusername, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPFpassword)
                                    .addComponent(jLBLvis, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPprofie_browse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(jTFemail, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLBLvis1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSusername1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLBLosk1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPback_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBLprevious_p, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLBLnext_p, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        getContentPane().add(jPback_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        jPback_v.setBackground(new java.awt.Color(34, 47, 62));

        jLBLminimize3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Minimize_Window_32px_1.png"))); // NOI18N
        jLBLminimize3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLminimize3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLminimize3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLminimize3MouseExited(evt);
            }
        });

        jLBLexit3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Cancel_32px.png"))); // NOI18N
        jLBLexit3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLexit3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLexit3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLexit3MouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Are you a human?");

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(121, 121, 121), 2, true));
        jPanel1.setOpaque(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(121, 121, 121), 1, true));
        jPanel2.setOpaque(false);

        jLBLh_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Human/c2.png"))); // NOI18N
        jLBLh_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLBLh_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLh_2MouseClicked(evt);
            }
        });

        jLBLh_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Human/c4.png"))); // NOI18N
        jLBLh_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLBLh_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLh_4MouseClicked(evt);
            }
        });

        jLBLh_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Human/c5.png"))); // NOI18N
        jLBLh_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLBLh_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLh_5MouseClicked(evt);
            }
        });

        jLBLh_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Human/c3.png"))); // NOI18N
        jLBLh_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLBLh_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLh_3MouseClicked(evt);
            }
        });

        jLBLh_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Human/c1.png"))); // NOI18N
        jLBLh_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLBLh_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLh_1MouseClicked(evt);
            }
        });

        jLBLh_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Human/c6.png"))); // NOI18N
        jLBLh_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLBLh_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLh_6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLBLh_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBLh_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBLh_3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLBLh_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBLh_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBLh_6)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLBLh_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLBLh_4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLBLh_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLBLh_5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLBLh_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBLh_6)))
                .addContainerGap())
        );

        jLBLhuman_img_text.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLBLhuman_img_text.setForeground(new java.awt.Color(255, 255, 255));
        jLBLhuman_img_text.setText("Select images with lion");

        jLBLreload_captcha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Sync_50px_1.png"))); // NOI18N
        jLBLreload_captcha.setToolTipText("Finding hard ?");
        jLBLreload_captcha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLreload_captcha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLreload_captchaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLreload_captchaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLreload_captchaMouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Enter the text");

        jLBLcaptcha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBLcaptcha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/capcha/a.png"))); // NOI18N
        jLBLcaptcha.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLBLreload_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Sync_50px_1.png"))); // NOI18N
        jLBLreload_img.setToolTipText("Finding hard ?");
        jLBLreload_img.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLreload_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLreload_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLreload_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLreload_imgMouseExited(evt);
            }
        });

        jTFcaptcha.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTFcaptcha.setForeground(new java.awt.Color(125, 125, 125));
        jTFcaptcha.setText("Enter Here");
        jTFcaptcha.setToolTipText("Enter the Captcha");
        jTFcaptcha.setBorder(null);
        jTFcaptcha.setOpaque(false);
        jTFcaptcha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTFcaptchaMousePressed(evt);
            }
        });
        jTFcaptcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFcaptchaActionPerformed(evt);
            }
        });
        jTFcaptcha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFcaptchaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFcaptchaKeyReleased(evt);
            }
        });

        jPverify_text.setToolTipText("check human verifiaion");
        jPverify_text.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPverify_text.setOpaque(false);
        jPverify_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPverify_textMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPverify_textMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPverify_textMouseExited(evt);
            }
        });

        jLBLverify_icon_text.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Search_More_32px_1.png"))); // NOI18N
        jLBLverify_icon_text.setToolTipText("chech human verification");
        jLBLverify_icon_text.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLverify_icon_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLverify_icon_textMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLverify_icon_textMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLverify_icon_textMouseExited(evt);
            }
        });

        jLBLverify_text.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLBLverify_text.setForeground(new java.awt.Color(170, 170, 170));
        jLBLverify_text.setText("Verify");
        jLBLverify_text.setToolTipText("check human verification");
        jLBLverify_text.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLverify_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLverify_textMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLverify_textMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLverify_textMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPverify_textLayout = new javax.swing.GroupLayout(jPverify_text);
        jPverify_text.setLayout(jPverify_textLayout);
        jPverify_textLayout.setHorizontalGroup(
            jPverify_textLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPverify_textLayout.createSequentialGroup()
                .addComponent(jLBLverify_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLverify_icon_text, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPverify_textLayout.setVerticalGroup(
            jPverify_textLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLverify_icon_text, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLBLverify_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPverify_img.setToolTipText("check human verification");
        jPverify_img.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPverify_img.setOpaque(false);
        jPverify_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPverify_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPverify_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPverify_imgMouseExited(evt);
            }
        });

        jLBLverify_icon_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Search_More_32px_1.png"))); // NOI18N
        jLBLverify_icon_img.setToolTipText("check human verification");
        jLBLverify_icon_img.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLverify_icon_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLverify_icon_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLverify_icon_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLverify_icon_imgMouseExited(evt);
            }
        });

        jLBLverify_img.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLBLverify_img.setForeground(new java.awt.Color(170, 170, 170));
        jLBLverify_img.setText("Verify");
        jLBLverify_img.setToolTipText("check human verification");
        jLBLverify_img.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLverify_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLverify_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLverify_imgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLverify_imgMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPverify_imgLayout = new javax.swing.GroupLayout(jPverify_img);
        jPverify_img.setLayout(jPverify_imgLayout);
        jPverify_imgLayout.setHorizontalGroup(
            jPverify_imgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPverify_imgLayout.createSequentialGroup()
                .addComponent(jLBLverify_img)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLverify_icon_img, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPverify_imgLayout.setVerticalGroup(
            jPverify_imgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBLverify_icon_img, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLBLverify_img, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jPverify_img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBL_success_img, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLBLhuman_img_text, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLBLreload_img)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLBLcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jLBLreload_captcha)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPverify_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLBLverified_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScaptcha, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTFcaptcha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLBLhuman_img_text, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLBLreload_img, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jPverify_img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLBL_success_img, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLBLcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLBLreload_captcha, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFcaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLBLverified_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPverify_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jLBLprevious_v.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Back_To_50px.png"))); // NOI18N
        jLBLprevious_v.setToolTipText("Previous Page");
        jLBLprevious_v.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLprevious_v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLprevious_vMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLprevious_vMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLprevious_vMouseExited(evt);
            }
        });

        jPsignup.setBackground(new java.awt.Color(33, 44, 59));
        jPsignup.setToolTipText("Create your own JAVIS account");
        jPsignup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPsignup.setOpaque(false);
        jPsignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPsignupMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPsignupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPsignupMouseExited(evt);
            }
        });

        jLBLsignup_icon.setBackground(new java.awt.Color(33, 44, 59));
        jLBLsignup_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8_Add_User_Male_50px_2.png"))); // NOI18N
        jLBLsignup_icon.setToolTipText("Create your own JAVIS account");
        jLBLsignup_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLsignup_icon.setOpaque(true);
        jLBLsignup_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLsignup_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLsignup_iconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLsignup_iconMouseExited(evt);
            }
        });

        jLBLsignup.setBackground(new java.awt.Color(33, 44, 59));
        jLBLsignup.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLBLsignup.setForeground(new java.awt.Color(0, 145, 125));
        jLBLsignup.setText("Sign up");
        jLBLsignup.setToolTipText("Create your own JAVIS account");
        jLBLsignup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBLsignup.setOpaque(true);
        jLBLsignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBLsignupMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLBLsignupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLBLsignupMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPsignupLayout = new javax.swing.GroupLayout(jPsignup);
        jPsignup.setLayout(jPsignupLayout);
        jPsignupLayout.setHorizontalGroup(
            jPsignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPsignupLayout.createSequentialGroup()
                .addComponent(jLBLsignup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBLsignup_icon))
        );
        jPsignupLayout.setVerticalGroup(
            jPsignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPsignupLayout.createSequentialGroup()
                .addComponent(jLBLsignup_icon)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLBLsignup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPback_vLayout = new javax.swing.GroupLayout(jPback_v);
        jPback_v.setLayout(jPback_vLayout);
        jPback_vLayout.setHorizontalGroup(
            jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_vLayout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addGroup(jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_vLayout.createSequentialGroup()
                        .addComponent(jLBLprevious_v)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLBLcontain_data, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(255, 255, 255)
                        .addComponent(jPsignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_vLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLBLminimize3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLBLexit3))
        );
        jPback_vLayout.setVerticalGroup(
            jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_vLayout.createSequentialGroup()
                .addGroup(jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBLminimize3)
                    .addComponent(jLBLexit3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPback_vLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLBLcontain_data, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPback_vLayout.createSequentialGroup()
                        .addGroup(jPback_vLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPback_vLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPsignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPback_vLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addComponent(jLBLprevious_v)))
                        .addContainerGap())))
        );

        getContentPane().add(jPback_v, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        jLBLback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/10.jpg"))); // NOI18N
        getContentPane().add(jLBLback, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    Border border=BorderFactory.createLineBorder(new Color(200,200,200),2);
    String Itc1="Icons\\icons8_Test_Passed_32px.png";
    String Itc2="Icons\\icons8_Test_Passed_32px_1.png";
    String Ipd1="Icons\\icons8_Contact_Details_32px.png";
    String Ipd2="Icons\\icons8_Contact_Details_32px_1.png";
    String Ip1="Icons\\icons8_Male_User_32px_3.png";
    String Ip2="Icons\\icons8_Male_User_32px_4.png";
    String Iv1="Icons\\icons8_ID_Verified_32px_1.png";
    String Iv2="Icons\\icons8_ID_Verified_32px_3.png";
    
    
    String NP_e="Icons\\icons8_Next_page_50px_1.png";
    String NP="Icons\\icons8_Next_page_50px.png";
    String PP="Icons\\icons8_Back_To_50px.png";
    String PP_e="Icons\\icons8_Back_To_50px_1.png";
    private void jPpdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPpdMouseReleased
    setSelectpane(new JPanel[] {jPpd},new JLabel[] {jLBLpd_txt},new JLabel[] {jLBLpd_ind},new JLabel[] {jLBLpd_icon},new String[] {Ipd2});
    setDeSelectpane(new JPanel[] {jPtc,jPp,jPv},new JLabel[] {jLBLtc_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLtc_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLtc_icon,jLBLp_icon,jLBLv_icon},new String[] {Itc1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (4).jpg")));
    jPback_tc.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_pd.setVisible(true);
    }//GEN-LAST:event_jPpdMouseReleased

    private void jLBLtc_txtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtc_txtMouseReleased
    setSelectpane(new JPanel[] {jPtc},new JLabel[] {jLBLtc_txt},new JLabel[] {jLBLtc_ind},new JLabel[] {jLBLtc_icon},new String[] {Itc2});
    setDeSelectpane(new JPanel[] {jPpd,jPp,jPv},new JLabel[] {jLBLpd_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLp_icon,jLBLv_icon},new String[] {Ipd1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\10.jpg")));
    jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_tc.setVisible(true);
    }//GEN-LAST:event_jLBLtc_txtMouseReleased

    private void jLBLtc_iconMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtc_iconMouseReleased
    setSelectpane(new JPanel[] {jPtc},new JLabel[] {jLBLtc_txt},new JLabel[] {jLBLtc_ind},new JLabel[] {jLBLtc_icon},new String[] {Itc2});
    setDeSelectpane(new JPanel[] {jPpd,jPp,jPv},new JLabel[] {jLBLpd_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLp_icon,jLBLv_icon},new String[] {Ipd1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\10.jpg")));
    jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_tc.setVisible(true);
    }//GEN-LAST:event_jLBLtc_iconMouseReleased

    private void jPtcMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPtcMouseReleased
    setSelectpane(new JPanel[] {jPtc},new JLabel[] {jLBLtc_txt},new JLabel[] {jLBLtc_ind},new JLabel[] {jLBLtc_icon},new String[] {Itc2});
    setDeSelectpane(new JPanel[] {jPpd,jPp,jPv},new JLabel[] {jLBLpd_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLp_icon,jLBLv_icon},new String[] {Ipd1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\10.jpg")));
    jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_tc.setVisible(true);
    }//GEN-LAST:event_jPtcMouseReleased

    private void jLBLtc_indMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtc_indMouseReleased
    setSelectpane(new JPanel[] {jPtc},new JLabel[] {jLBLtc_txt},new JLabel[] {jLBLtc_ind},new JLabel[] {jLBLtc_icon},new String[] {Itc2});
    setDeSelectpane(new JPanel[] {jPpd,jPp,jPv},new JLabel[] {jLBLpd_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLp_icon,jLBLv_icon},new String[] {Ipd1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\10.jpg")));
    jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_tc.setVisible(true);
    }//GEN-LAST:event_jLBLtc_indMouseReleased

    private void jLBLpd_txtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLpd_txtMouseReleased
    setSelectpane(new JPanel[] {jPpd},new JLabel[] {jLBLpd_txt},new JLabel[] {jLBLpd_ind},new JLabel[] {jLBLpd_icon},new String[] {Ipd2});
    setDeSelectpane(new JPanel[] {jPtc,jPp,jPv},new JLabel[] {jLBLtc_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLtc_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLtc_icon,jLBLp_icon,jLBLv_icon},new String[] {Itc1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (4).jpg")));
    jPback_tc.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_pd.setVisible(true);
    }//GEN-LAST:event_jLBLpd_txtMouseReleased

    private void jLBLpd_iconMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLpd_iconMouseReleased
    setSelectpane(new JPanel[] {jPpd},new JLabel[] {jLBLpd_txt},new JLabel[] {jLBLpd_ind},new JLabel[] {jLBLpd_icon},new String[] {Ipd2});
    setDeSelectpane(new JPanel[] {jPtc,jPp,jPv},new JLabel[] {jLBLtc_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLtc_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLtc_icon,jLBLp_icon,jLBLv_icon},new String[] {Itc1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (4).jpg")));
    jPback_tc.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_pd.setVisible(true);
    }//GEN-LAST:event_jLBLpd_iconMouseReleased

    private void jLBLpd_indMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLpd_indMouseReleased
    setSelectpane(new JPanel[] {jPpd},new JLabel[] {jLBLpd_txt},new JLabel[] {jLBLpd_ind},new JLabel[] {jLBLpd_icon},new String[] {Ipd2});
    setDeSelectpane(new JPanel[] {jPtc,jPp,jPv},new JLabel[] {jLBLtc_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLtc_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLtc_icon,jLBLp_icon,jLBLv_icon},new String[] {Itc1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (4).jpg")));
    jPback_tc.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_pd.setVisible(true);
    }//GEN-LAST:event_jLBLpd_indMouseReleased

    private void jPpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPpMouseReleased
    setSelectpane(new JPanel[] {jPp},new JLabel[] {jLBLp_txt},new JLabel[] {jLBLp_ind},new JLabel[] {jLBLp_icon},new String[] {Ip2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPv},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLv_icon},new String[] {Ipd1,Itc1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\ug3.jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_v.setVisible(false);jPback_p.setVisible(true);
    }//GEN-LAST:event_jPpMouseReleased

    private void jLBLp_txtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLp_txtMouseReleased
    setSelectpane(new JPanel[] {jPp},new JLabel[] {jLBLp_txt},new JLabel[] {jLBLp_ind},new JLabel[] {jLBLp_icon},new String[] {Ip2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPv},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLv_icon},new String[] {Ipd1,Itc1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\ug3.jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_v.setVisible(false);jPback_p.setVisible(true);
    }//GEN-LAST:event_jLBLp_txtMouseReleased

    private void jLBLp_iconMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLp_iconMouseReleased
    setSelectpane(new JPanel[] {jPp},new JLabel[] {jLBLp_txt},new JLabel[] {jLBLp_ind},new JLabel[] {jLBLp_icon},new String[] {Ip2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPv},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLv_icon},new String[] {Ipd1,Itc1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\ug3.jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_v.setVisible(false);jPback_p.setVisible(true);
    }//GEN-LAST:event_jLBLp_iconMouseReleased

    private void jLBLp_indMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLp_indMouseReleased
    setSelectpane(new JPanel[] {jPp},new JLabel[] {jLBLp_txt},new JLabel[] {jLBLp_ind},new JLabel[] {jLBLp_icon},new String[] {Ip2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPv},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLv_icon},new String[] {Ipd1,Itc1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\ug3.jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_v.setVisible(false);jPback_p.setVisible(true);
    }//GEN-LAST:event_jLBLp_indMouseReleased

    private void jPvMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPvMouseReleased
    setSelectpane(new JPanel[] {jPv},new JLabel[] {jLBLv_txt},new JLabel[] {jLBLv_ind},new JLabel[] {jLBLv_icon},new String[] {Iv2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPp},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLp_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLp_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLp_icon},new String[] {Ipd1,Itc1,Ip1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (3).jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(true);
    }//GEN-LAST:event_jPvMouseReleased

    private void jLBLv_txtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLv_txtMouseReleased
    setSelectpane(new JPanel[] {jPv},new JLabel[] {jLBLv_txt},new JLabel[] {jLBLv_ind},new JLabel[] {jLBLv_icon},new String[] {Iv2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPp},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLp_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLp_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLp_icon},new String[] {Ipd1,Itc1,Ip1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (3).jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(true);
    }//GEN-LAST:event_jLBLv_txtMouseReleased

    private void jLBLv_iconMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLv_iconMouseReleased
    setSelectpane(new JPanel[] {jPv},new JLabel[] {jLBLv_txt},new JLabel[] {jLBLv_ind},new JLabel[] {jLBLv_icon},new String[] {Iv2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPp},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLp_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLp_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLp_icon},new String[] {Ipd1,Itc1,Ip1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (3).jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(true);
    }//GEN-LAST:event_jLBLv_iconMouseReleased

    private void jLBLv_indMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLv_indMouseReleased
    setSelectpane(new JPanel[] {jPv},new JLabel[] {jLBLv_txt},new JLabel[] {jLBLv_ind},new JLabel[] {jLBLv_icon},new String[] {Iv2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPp},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLp_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLp_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLp_icon},new String[] {Ipd1,Itc1,Ip1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (3).jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(true);
    }//GEN-LAST:event_jLBLv_indMouseReleased

    private void jTFfirst_nameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFfirst_nameMousePressed
    jTFfirst_name.setCaretPosition(0);
    }//GEN-LAST:event_jTFfirst_nameMousePressed

    private void jTFfirst_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFfirst_nameActionPerformed

    }//GEN-LAST:event_jTFfirst_nameActionPerformed

    private void jTFfirst_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFfirst_nameKeyPressed
    if(jTFfirst_name.getForeground()!=new Color(255,255,255,255)){
        if(jTFfirst_name.getText().equals("First Name")){
            jTFfirst_name.setText("");
        }
    }
    jTFfirst_name.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFfirst_nameKeyPressed

    private void jTFfirst_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFfirst_nameKeyReleased
    if(jTFfirst_name.getText().isEmpty()){
        jTFfirst_name.setText("First Name");
        jTFfirst_name.setCaretPosition(0);
        jTFfirst_name.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFfirst_nameKeyReleased

    private void jTFlast_nameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFlast_nameMousePressed
    jTFlast_name.setCaretPosition(0);
    }//GEN-LAST:event_jTFlast_nameMousePressed

    private void jTFlast_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFlast_nameActionPerformed
    }//GEN-LAST:event_jTFlast_nameActionPerformed

    private void jTFlast_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFlast_nameKeyPressed
    if(jTFlast_name.getForeground()!=new Color(255,255,255,255)){
            if(jTFlast_name.getText().equals("Last Name")){
                jTFlast_name.setText("");
            }
        }
        jTFlast_name.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFlast_nameKeyPressed

    private void jTFlast_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFlast_nameKeyReleased
    if(jTFlast_name.getText().isEmpty()){
            jTFlast_name.setText("Last Name");
            jTFlast_name.setCaretPosition(0);
            jTFlast_name.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFlast_nameKeyReleased

    private void jLBLexitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexitMouseEntered
    jLBLexit.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px_1.png")));
    }//GEN-LAST:event_jLBLexitMouseEntered

    private void jLBLexitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexitMouseExited
    jLBLexit.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px.png")));
    }//GEN-LAST:event_jLBLexitMouseExited

    private void jLBLminimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimizeMouseExited
    jLBLminimize.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_1.png")));
    }//GEN-LAST:event_jLBLminimizeMouseExited

    private void jLBLminimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimizeMouseEntered
    jLBLminimize.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_2.png")));
    }//GEN-LAST:event_jLBLminimizeMouseEntered

    private void jLBLexitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexitMouseClicked
    System.exit(0);
    }//GEN-LAST:event_jLBLexitMouseClicked

    private void jLBLminimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimizeMouseClicked
    this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLBLminimizeMouseClicked

    private void jLBLminimize1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize1MouseClicked
    this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLBLminimize1MouseClicked

    private void jLBLminimize1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize1MouseEntered
    jLBLminimize1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_2.png")));
    }//GEN-LAST:event_jLBLminimize1MouseEntered

    private void jLBLminimize1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize1MouseExited
    jLBLminimize1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_1.png")));
    }//GEN-LAST:event_jLBLminimize1MouseExited

    private void jLBLexit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit1MouseClicked
    System.exit(0);
    }//GEN-LAST:event_jLBLexit1MouseClicked

    private void jLBLexit1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit1MouseEntered
    jLBLexit1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px_1.png")));
    }//GEN-LAST:event_jLBLexit1MouseEntered

    private void jLBLexit1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit1MouseExited
    jLBLexit1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px.png")));
    }//GEN-LAST:event_jLBLexit1MouseExited

    private void jLBLminimize3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize3MouseClicked
    this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLBLminimize3MouseClicked

    private void jLBLminimize3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize3MouseEntered
    jLBLminimize3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_2.png")));
    }//GEN-LAST:event_jLBLminimize3MouseEntered

    private void jLBLminimize3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize3MouseExited
    jLBLminimize3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_1.png")));
    }//GEN-LAST:event_jLBLminimize3MouseExited

    private void jLBLexit3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit3MouseClicked
    System.exit(0);
    }//GEN-LAST:event_jLBLexit3MouseClicked

    private void jLBLexit3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit3MouseEntered
    jLBLexit3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px_1.png")));
    }//GEN-LAST:event_jLBLexit3MouseEntered

    private void jLBLexit3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit3MouseExited
    jLBLexit3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px.png")));
    }//GEN-LAST:event_jLBLexit3MouseExited

    private void jTFf_nameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFf_nameMousePressed
    jTFf_name.setCaretPosition(0);
    }//GEN-LAST:event_jTFf_nameMousePressed

    private void jTFf_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFf_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFf_nameActionPerformed

    private void jTFf_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFf_nameKeyPressed
    if(jTFf_name.getForeground()!=new Color(255,255,255,255)){
        if(jTFf_name.getText().equals("Father's Name")){
            jTFf_name.setText("");
        }
    }
    jTFf_name.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFf_nameKeyPressed

    private void jTFf_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFf_nameKeyReleased
    if(jTFf_name.getText().isEmpty()){
            jTFf_name.setText("Father's Name");
            jTFf_name.setCaretPosition(0);
            jTFf_name.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFf_nameKeyReleased

    private void jTFm_nameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFm_nameMousePressed
    jTFm_name.setCaretPosition(0);
    }//GEN-LAST:event_jTFm_nameMousePressed

    private void jTFm_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFm_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFm_nameActionPerformed

    private void jTFm_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFm_nameKeyPressed
    if(jTFm_name.getForeground()!=new Color(255,255,255,255)){
        if(jTFm_name.getText().equals("Mother's Name")){
            jTFm_name.setText("");
        }
    }
    jTFm_name.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFm_nameKeyPressed

    private void jTFm_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFm_nameKeyReleased
    if(jTFm_name.getText().isEmpty()){
            jTFm_name.setText("Mother's Name");
            jTFm_name.setCaretPosition(0);
            jTFm_name.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFm_nameKeyReleased

    private void jRBfemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBfemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBfemActionPerformed

    private void jRBtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBtraActionPerformed
String m="Icons\\icons8_Male_32px.png";
String f="Icons\\icons8_Female_32px.png";
String t="Icons\\icons8_Transgender_32px.png";
String m1="Icons\\icons8_Male_32px_1.png";
String f1="Icons\\icons8_Female_32px_1.png";
String t1="Icons\\icons8_Transgender_32px_1.png";
    private void jPmaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPmaleMouseClicked
    setselectgender(new JRadioButton[]{jRBmal},new JLabel[]{jLBLm_i},new JLabel[]{jLBLmale},new String[]{m1});
    setdeselectgender(new JRadioButton[] {jRBfem,jRBtra},new JLabel[] {jLBLf_i,jLBLt_i},new JLabel[] {jLBLfemale,jLBLtransgender},new String [] {f,t});
    }//GEN-LAST:event_jPmaleMouseClicked

    private void jPfemaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPfemaleMouseClicked
    setselectgender(new JRadioButton[]{jRBfem},new JLabel[]{jLBLf_i},new JLabel[]{jLBLfemale},new String[]{f1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBtra},new JLabel[] {jLBLm_i,jLBLt_i},new JLabel[] {jLBLmale,jLBLtransgender},new String [] {m,t});
    }//GEN-LAST:event_jPfemaleMouseClicked

    private void jPtransgenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPtransgenderMouseClicked
    setselectgender(new JRadioButton[]{jRBtra},new JLabel[]{jLBLt_i},new JLabel[]{jLBLtransgender},new String[]{t1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBfem},new JLabel[] {jLBLm_i,jLBLf_i},new JLabel[] {jLBLmale,jLBLfemale},new String [] {m,f});
    }//GEN-LAST:event_jPtransgenderMouseClicked

    private void jLBLmaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLmaleMouseClicked
    setselectgender(new JRadioButton[]{jRBmal},new JLabel[]{jLBLm_i},new JLabel[]{jLBLmale},new String[]{m1});
    setdeselectgender(new JRadioButton[] {jRBfem,jRBtra},new JLabel[] {jLBLf_i,jLBLt_i},new JLabel[] {jLBLfemale,jLBLtransgender},new String [] {f,t});
    }//GEN-LAST:event_jLBLmaleMouseClicked

    private void jLBLm_iMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLm_iMouseClicked
    setselectgender(new JRadioButton[]{jRBmal},new JLabel[]{jLBLm_i},new JLabel[]{jLBLmale},new String[]{m1});
    setdeselectgender(new JRadioButton[] {jRBfem,jRBtra},new JLabel[] {jLBLf_i,jLBLt_i},new JLabel[] {jLBLfemale,jLBLtransgender},new String [] {f,t});
    }//GEN-LAST:event_jLBLm_iMouseClicked

    private void jLBLfemaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLfemaleMouseClicked
    setselectgender(new JRadioButton[]{jRBfem},new JLabel[]{jLBLf_i},new JLabel[]{jLBLfemale},new String[]{f1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBtra},new JLabel[] {jLBLm_i,jLBLt_i},new JLabel[] {jLBLmale,jLBLtransgender},new String [] {m,t});
    }//GEN-LAST:event_jLBLfemaleMouseClicked

    private void jLBLf_iMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLf_iMouseClicked
    setselectgender(new JRadioButton[]{jRBfem},new JLabel[]{jLBLf_i},new JLabel[]{jLBLfemale},new String[]{f1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBtra},new JLabel[] {jLBLm_i,jLBLt_i},new JLabel[] {jLBLmale,jLBLtransgender},new String [] {m,t});
    }//GEN-LAST:event_jLBLf_iMouseClicked

    private void jRBmalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBmalMouseClicked
    setselectgender(new JRadioButton[]{jRBmal},new JLabel[]{jLBLm_i},new JLabel[]{jLBLmale},new String[]{m1});
    setdeselectgender(new JRadioButton[] {jRBfem,jRBtra},new JLabel[] {jLBLf_i,jLBLt_i},new JLabel[] {jLBLfemale,jLBLtransgender},new String [] {f,t});
    }//GEN-LAST:event_jRBmalMouseClicked

    private void jRBfemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBfemMouseClicked
    setselectgender(new JRadioButton[]{jRBfem},new JLabel[]{jLBLf_i},new JLabel[]{jLBLfemale},new String[]{f1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBtra},new JLabel[] {jLBLm_i,jLBLt_i},new JLabel[] {jLBLmale,jLBLtransgender},new String [] {m,t});
    }//GEN-LAST:event_jRBfemMouseClicked

    private void jLBLtransgenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtransgenderMouseClicked
    setselectgender(new JRadioButton[]{jRBtra},new JLabel[]{jLBLt_i},new JLabel[]{jLBLtransgender},new String[]{t1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBfem},new JLabel[] {jLBLm_i,jLBLf_i},new JLabel[] {jLBLmale,jLBLfemale},new String [] {m,f});
    }//GEN-LAST:event_jLBLtransgenderMouseClicked

    private void jLBLt_iMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLt_iMouseClicked
    setselectgender(new JRadioButton[]{jRBtra},new JLabel[]{jLBLt_i},new JLabel[]{jLBLtransgender},new String[]{t1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBfem},new JLabel[] {jLBLm_i,jLBLf_i},new JLabel[] {jLBLmale,jLBLfemale},new String [] {m,f});
    }//GEN-LAST:event_jLBLt_iMouseClicked

    private void jRBtraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBtraMouseClicked
    setselectgender(new JRadioButton[]{jRBtra},new JLabel[]{jLBLt_i},new JLabel[]{jLBLtransgender},new String[]{t1});
    setdeselectgender(new JRadioButton[] {jRBmal,jRBfem},new JLabel[] {jLBLm_i,jLBLf_i},new JLabel[] {jLBLmale,jLBLfemale},new String [] {m,f});
    }//GEN-LAST:event_jRBtraMouseClicked

    private void jLBLn_ageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLn_ageMouseEntered
    
    jLBLn_age.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Puzzled_35px_1.png")));
    if(jCHKage.isSelected()){
        jLBLn_age.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Thumbs_Up_35px_1.png")));
    }
    }//GEN-LAST:event_jLBLn_ageMouseEntered

    private void jLBLn_ageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLn_ageMouseExited
 
    jLBLn_age.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Puzzled_35px.png")));
    if(jCHKage.isSelected()){
        jLBLn_age.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Thumbs_Up_35px_1.png")));
    }
    }//GEN-LAST:event_jLBLn_ageMouseExited

    private void jLBLn_ageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLn_ageMouseClicked
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy");
    DateFormat df= new SimpleDateFormat("yyyy");
    LocalDateTime now = LocalDateTime.now();
    String yot=dtf.format(now);
    String yob=df.format(jDCdob.getDate());
    int age=Integer.parseInt(yot)-Integer.parseInt(yob);
    jTFage.setText(""+age);
    jTFage.setForeground(Color.white);
    jLBLn_age.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Thumbs_Up_35px_1.png")));
    jCHKage.setSelected(true);
    }//GEN-LAST:event_jLBLn_ageMouseClicked

    private void jTFageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFageMousePressed
    jTFage.setCaretPosition(0);
    }//GEN-LAST:event_jTFageMousePressed

    private void jTFageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFageActionPerformed

    private void jTFageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFageKeyPressed
    if(jTFage.getForeground()!=new Color(255,255,255,255)){
            if(jTFage.getText().equals("Age")){
                jTFage.setText("");
            }
        }
        jTFage.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFageKeyPressed

    private void jTFageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFageKeyReleased
    if(jTFage.getText().isEmpty()){
            jTFage.setText("Age");
            jTFage.setCaretPosition(0);
            jTFage.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFageKeyReleased

    private void jTFdobMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFdobMousePressed
    jTFdob.setCaretPosition(0);
    }//GEN-LAST:event_jTFdobMousePressed

    private void jTFdobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFdobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFdobActionPerformed

    private void jTFdobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdobKeyPressed
    if(jTFdob.getForeground()!=new Color(255,255,255,255)){
            if(jTFdob.getText().equals("DOB")){
                jTFdob.setText("");
            }
        }
        jTFdob.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFdobKeyPressed

    private void jTFdobKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdobKeyReleased
    if(jTFdob.getText().isEmpty()){
            jTFdob.setText("DOB");
            jTFdob.setCaretPosition(0);
            jTFdob.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFdobKeyReleased

    private void jLBLdobMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLdobMouseEntered
    jLBLdob.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Ok_35px_3.png")));
    if(jCHKdob.isSelected()){
        jLBLdob.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Ok_35px_1.png")));
    }
    }//GEN-LAST:event_jLBLdobMouseEntered

    private void jLBLdobMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLdobMouseExited
    jLBLdob.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Ok_35px.png")));
    if(jCHKdob.isSelected()){
        jLBLdob.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Ok_35px_1.png")));
    }
    }//GEN-LAST:event_jLBLdobMouseExited

    private void jLBLdobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLdobMouseClicked
    jLBLdob.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Ok_35px_1.png")));
    DateFormat df= new SimpleDateFormat("yyyy-MM-dd");
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy"),dtf2 = DateTimeFormatter.ofPattern("MM"),dtf3= DateTimeFormatter.ofPattern("dd");
    DateFormat df1= new SimpleDateFormat("yyyy"),df2= new SimpleDateFormat("MM"),df3= new SimpleDateFormat("dd");
    LocalDateTime now = LocalDateTime.now();
    String yot=dtf.format(now),yot2=dtf2.format(now),yot3=dtf3.format(now);
    String yob=df1.format(jDCdob.getDate()),yob2=df2.format(jDCdob.getDate()),yob3=df3.format(jDCdob.getDate());
    int age=Integer.parseInt(yot)-Integer.parseInt(yob),age_m=Integer.parseInt(yot2)-Integer.parseInt(yob2),age_d=Integer.parseInt(yot3)-Integer.parseInt(yob3);
    String date=df.format(jDCdob.getDate());
    if(age<0){
        JOptionPane.showMessageDialog(this, "Select a valid date before confirmation it"+"\n *you can enter manually in the format yyyy-mm-dd"+"\n enter a date in past", "Valid date not selected",JOptionPane.ERROR_MESSAGE);
    }else{
    jCHKdob.setSelected(true);
    jTFdob.setText(date);
    jTFdob.setForeground(Color.white);
    }
    }//GEN-LAST:event_jLBLdobMouseClicked

    private void jPtcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPtcMouseEntered
    
    }//GEN-LAST:event_jPtcMouseEntered

    private void jLBLtc_txtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtc_txtMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLBLtc_txtMouseEntered

    private void jLBLtc_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtc_iconMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLBLtc_iconMouseEntered

    private void jLBLtc_indMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLtc_indMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLBLtc_indMouseEntered

    private void jLBLoskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLoskMouseClicked
        try {
            Desktop.getDesktop().open(new File("C:\\Windows\\system32\\osk.exe"));
        }
        catch (IOException ex) {
            Logger.getLogger(LOGIN_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLBLoskMouseClicked

    private void jLBLoskMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLoskMouseEntered
        jLBLosk.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Keyboard_64px_2.png")));
    }//GEN-LAST:event_jLBLoskMouseEntered

    private void jLBLoskMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLoskMouseExited
        jLBLosk.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Keyboard_64px.png")));
    }//GEN-LAST:event_jLBLoskMouseExited

    private void jLBLnext_pdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnext_pdMouseEntered
    jLBLnext_pd.setIcon(new ImageIcon(getClass().getClassLoader().getResource(NP_e)));
    }//GEN-LAST:event_jLBLnext_pdMouseEntered

    private void jLBLnext_pdMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnext_pdMouseExited
    jLBLnext_pd.setIcon(new ImageIcon(getClass().getClassLoader().getResource(NP)));
    }//GEN-LAST:event_jLBLnext_pdMouseExited

    private void jLBLprevious_pdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_pdMouseEntered
    jLBLprevious_pd.setIcon(new ImageIcon(getClass().getClassLoader().getResource(PP_e)));
    }//GEN-LAST:event_jLBLprevious_pdMouseEntered

    private void jLBLprevious_pdMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_pdMouseExited
    jLBLprevious_pd.setIcon(new ImageIcon(getClass().getClassLoader().getResource(PP)));
    }//GEN-LAST:event_jLBLprevious_pdMouseExited

    private void jLBLnext_pdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnext_pdMouseClicked
    setSelectpane(new JPanel[] {jPp},new JLabel[] {jLBLp_txt},new JLabel[] {jLBLp_ind},new JLabel[] {jLBLp_icon},new String[] {Ip2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPv},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLv_icon},new String[] {Ipd1,Itc1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\ug3.jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_v.setVisible(false);jPback_p.setVisible(true);
    }//GEN-LAST:event_jLBLnext_pdMouseClicked

    private void jLBLprevious_pdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_pdMouseClicked
    setSelectpane(new JPanel[] {jPtc},new JLabel[] {jLBLtc_txt},new JLabel[] {jLBLtc_ind},new JLabel[] {jLBLtc_icon},new String[] {Itc2});
    setDeSelectpane(new JPanel[] {jPpd,jPp,jPv},new JLabel[] {jLBLpd_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLp_icon,jLBLv_icon},new String[] {Ipd1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\10.jpg")));
    jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_tc.setVisible(true);
    }//GEN-LAST:event_jLBLprevious_pdMouseClicked

    private void jPbrowseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPbrowseMouseExited
        jLBLbrowse.setForeground(new Color(121,121,121));
        jPbrowse.setBackground(new Color(0,0,0,0));
        jLBLi_browse.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_Folder_35px.png")));
    }//GEN-LAST:event_jPbrowseMouseExited

    private void jPbrowseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPbrowseMouseEntered
        jLBLbrowse.setForeground(Color.white);
        jPbrowse.setBackground(new Color(121,121,121,121));
        jLBLi_browse.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_Folder_35px_1.png")));
    }//GEN-LAST:event_jPbrowseMouseEntered

    private void jLBLi_browseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLi_browseMouseExited
        jLBLbrowse.setForeground(new Color(121,121,121));
        jPbrowse.setBackground(new Color(0,0,0,0));
        jLBLi_browse.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_Folder_35px.png")));
    }//GEN-LAST:event_jLBLi_browseMouseExited

    private void jLBLi_browseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLi_browseMouseEntered
        jLBLbrowse.setForeground(Color.white);
        jPbrowse.setBackground(new Color(121,121,121,121));
        jLBLi_browse.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_Folder_35px_1.png")));
    }//GEN-LAST:event_jLBLi_browseMouseEntered

    private void jLBLbrowseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLbrowseMouseExited
        jLBLbrowse.setForeground(new Color(121,121,121));
        jPbrowse.setBackground(new Color(0,0,0,0));
        jLBLi_browse.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_Folder_35px.png")));
    }//GEN-LAST:event_jLBLbrowseMouseExited

    private void jLBLbrowseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLbrowseMouseEntered
        jLBLbrowse.setForeground(Color.white);
        jPbrowse.setBackground(new Color(121,121,121,121));
        jLBLi_browse.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_Folder_35px_1.png")));
    }//GEN-LAST:event_jLBLbrowseMouseEntered

    private void jPFpasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPFpasswordKeyReleased
        if(jPFpassword.getText().isEmpty()){
            jPFpassword.setText("Password");
            jPFpassword.setEchoChar((char)0);
            jPFpassword.setCaretPosition(0);
            jPFpassword.setForeground(new Color(125,125,125));
        }
    }//GEN-LAST:event_jPFpasswordKeyReleased

    private void jPFpasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPFpasswordKeyPressed
        if(jPFpassword.getForeground()!=new Color(255,255,255)){
            if(jPFpassword.getText().equals("Password")){
                jPFpassword.setText("");
                if(jCHKvis.isSelected()){
                    jPFpassword.setEchoChar((char)0);
                }
                else if(jCHKvis.isSelected()==false){
                    jPFpassword.setEchoChar('*');
                }
            }
        }
        jPFpassword.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_jPFpasswordKeyPressed

    private void jPFpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPFpasswordActionPerformed

    }//GEN-LAST:event_jPFpasswordActionPerformed

    private void jPFpasswordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPFpasswordMousePressed
        jPFpassword.setCaretPosition(0);
    }//GEN-LAST:event_jPFpasswordMousePressed

    private void jTFusernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFusernameKeyReleased
        if(jTFusername.getText().isEmpty()){
            jTFusername.setText("User Name");
            jTFusername.setCaretPosition(0);
            jTFusername.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFusernameKeyReleased

    private void jTFusernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFusernameKeyPressed
        if(jTFusername.getForeground()!=new Color(255,255,255,255)){
            if(jTFusername.getText().equals("User Name")){
                jTFusername.setText("");
            }
        }
        jTFusername.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFusernameKeyPressed

    private void jTFusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFusernameActionPerformed

    }//GEN-LAST:event_jTFusernameActionPerformed

    private void jTFusernameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFusernameMousePressed
        jTFusername.setCaretPosition(0);
    }//GEN-LAST:event_jTFusernameMousePressed

    private void jLBLexit2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit2MouseExited
        jLBLexit2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px.png")));
    }//GEN-LAST:event_jLBLexit2MouseExited

    private void jLBLexit2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit2MouseEntered
        jLBLexit2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Cancel_32px_1.png")));
    }//GEN-LAST:event_jLBLexit2MouseEntered

    private void jLBLexit2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLexit2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLBLexit2MouseClicked

    private void jLBLminimize2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize2MouseExited
        jLBLminimize2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_1.png")));
    }//GEN-LAST:event_jLBLminimize2MouseExited

    private void jLBLminimize2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize2MouseEntered
        jLBLminimize2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Minimize_Window_32px_2.png")));
    }//GEN-LAST:event_jLBLminimize2MouseEntered

    private void jLBLminimize2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLminimize2MouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLBLminimize2MouseClicked

    private void jLBLbrowseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLbrowseMouseClicked
    FileNameExtensionFilter filter=new FileNameExtensionFilter("Image_formats","png");
    JFileChooser ch=new JFileChooser();
    ch.addChoosableFileFilter(filter);
    ch.showOpenDialog(null);
    File propic=ch.getSelectedFile();
    filename=propic.getAbsolutePath();
    jLBLproloc.setText(filename);
    jLBLprofile_pic.setIcon(new ImageIcon(filename));
    if(!jLBLproloc.getText().equals("")){
    String pr=jLBLproloc.getText();
    String pb=pr.substring(pr.length()-3,pr.length());
    if(!pb.equals("png")){
        JOptionPane.showMessageDialog(null, "profile picture must be in png format in png format", "Profile picture format error", 0,null);
        jLBLproloc.setText("");
        jLBLprofile_pic.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_100px.png")));
    }
    }
    try {
        File img= new File(filename);
        FileInputStream fis=new FileInputStream(img);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf=new byte[1024];
        for(int readnum;(readnum=fis.read(buf))!=-1;){
            bos.write(buf,0,readnum);
        }
        person_image=bos.toByteArray();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_jLBLbrowseMouseClicked

    private void jLBLosk1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLosk1MouseClicked
        try {
            Desktop.getDesktop().open(new File("C:\\Windows\\system32\\osk.exe"));
        }
        catch (IOException ex) {
            Logger.getLogger(LOGIN_JAVIS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLBLosk1MouseClicked

    private void jLBLosk1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLosk1MouseEntered
        jLBLosk1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Keyboard_64px_2.png")));
    }//GEN-LAST:event_jLBLosk1MouseEntered

    private void jLBLosk1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLosk1MouseExited
        jLBLosk1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Keyboard_64px.png")));
    }//GEN-LAST:event_jLBLosk1MouseExited

    private void jLBLvisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLvisMouseClicked
    if(jCHKvis.isSelected()){
            jPFpassword.setEchoChar((char)0);
            jCHKvis.setSelected(false);
            jLBLvis.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Eye_32px_1.png")));
        }
        else if(jCHKvis.isSelected()==false){
            jPFpassword.setEchoChar('*');
            jLBLvis.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Invisible_32px_1.png")));
            jCHKvis.setSelected(true);
        }
    }//GEN-LAST:event_jLBLvisMouseClicked

    private void jLBLvisMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLvisMouseEntered
    jLBLvis.setBorder(border);
    }//GEN-LAST:event_jLBLvisMouseEntered

    private void jLBLvisMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLvisMouseExited
    jLBLvis.setBorder(new EmptyBorder(0,0,0,0));
    }//GEN-LAST:event_jLBLvisMouseExited

    private void jLBLprevious_pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_pMouseClicked
    setSelectpane(new JPanel[] {jPpd},new JLabel[] {jLBLpd_txt},new JLabel[] {jLBLpd_ind},new JLabel[] {jLBLpd_icon},new String[] {Ipd2});
    setDeSelectpane(new JPanel[] {jPtc,jPp,jPv},new JLabel[] {jLBLtc_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLtc_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLtc_icon,jLBLp_icon,jLBLv_icon},new String[] {Itc1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (4).jpg")));
    jPback_tc.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_pd.setVisible(true);
    }//GEN-LAST:event_jLBLprevious_pMouseClicked

    private void jLBLprevious_pMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_pMouseEntered
    jLBLprevious_p.setIcon(new ImageIcon(getClass().getClassLoader().getResource(PP_e)));
    }//GEN-LAST:event_jLBLprevious_pMouseEntered

    private void jLBLprevious_pMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_pMouseExited
    jLBLprevious_p.setIcon(new ImageIcon(getClass().getClassLoader().getResource(PP)));
    }//GEN-LAST:event_jLBLprevious_pMouseExited

    private void jLBLnext_pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnext_pMouseClicked
    setSelectpane(new JPanel[] {jPv},new JLabel[] {jLBLv_txt},new JLabel[] {jLBLv_ind},new JLabel[] {jLBLv_icon},new String[] {Iv2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPp},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLp_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLp_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLp_icon},new String[] {Ipd1,Itc1,Ip1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (3).jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(true);
    }//GEN-LAST:event_jLBLnext_pMouseClicked

    private void jLBLnext_pMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnext_pMouseEntered
    jLBLnext_p.setIcon(new ImageIcon(getClass().getClassLoader().getResource(NP_e)));
    }//GEN-LAST:event_jLBLnext_pMouseEntered

    private void jLBLnext_pMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnext_pMouseExited
    jLBLnext_p.setIcon(new ImageIcon(getClass().getClassLoader().getResource(NP)));
    }//GEN-LAST:event_jLBLnext_pMouseExited

    private void jLBLi_browseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLi_browseMouseClicked
    FileNameExtensionFilter filter=new FileNameExtensionFilter("Image_formats","png");
    JFileChooser ch=new JFileChooser();
    ch.addChoosableFileFilter(filter);
    ch.showOpenDialog(null);
    File propic=ch.getSelectedFile();
    filename=propic.getAbsolutePath();
    jLBLproloc.setText(filename);
    jLBLprofile_pic.setIcon(new ImageIcon(filename));
    if(!jLBLproloc.getText().equals("")){
    String pr=jLBLproloc.getText();
    String pb=pr.substring(pr.length()-3,pr.length());
    if(!pb.equals("png")){
        JOptionPane.showMessageDialog(null, "profile picture must be in png format in png format", "Profile picture format error", 0,null);
        jLBLproloc.setText("");
        jLBLprofile_pic.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_100px.png")));
    }
    }
    try {
        File img= new File(filename);
        FileInputStream fis=new FileInputStream(img);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf=new byte[1024];
        for(int readnum;(readnum=fis.read(buf))!=-1;){
            bos.write(buf,0,readnum);
        }
        person_image=bos.toByteArray();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_jLBLi_browseMouseClicked

    private void jPbrowseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPbrowseMouseClicked
    FileNameExtensionFilter filter=new FileNameExtensionFilter("Image_formats","png");
    JFileChooser ch=new JFileChooser();
    ch.addChoosableFileFilter(filter);
    ch.showOpenDialog(null);
    File propic=ch.getSelectedFile();
    filename=propic.getAbsolutePath();
    jLBLproloc.setText(filename);
    jLBLprofile_pic.setIcon(new ImageIcon(filename));
    if(!jLBLproloc.getText().equals("")){
    String pr=jLBLproloc.getText();
    String pb=pr.substring(pr.length()-3,pr.length());
    if(!pb.equals("png")){
        JOptionPane.showMessageDialog(null, "profile picture must be in png format in png format", "Profile picture format error", 0,null);
        jLBLproloc.setText("");
        jLBLprofile_pic.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_100px.png")));
    }
    }
    try {
        File img= new File(filename);
        FileInputStream fis=new FileInputStream(img);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf=new byte[1024];
        for(int readnum;(readnum=fis.read(buf))!=-1;){
            bos.write(buf,0,readnum);
        }
        person_image=bos.toByteArray();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_jPbrowseMouseClicked

    private void jLBLprevious_vMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_vMouseClicked
    setSelectpane(new JPanel[] {jPp},new JLabel[] {jLBLp_txt},new JLabel[] {jLBLp_ind},new JLabel[] {jLBLp_icon},new String[] {Ip2});
    setDeSelectpane(new JPanel[] {jPpd,jPtc,jPv},new JLabel[] {jLBLpd_txt,jLBLtc_txt,jLBLv_txt},new JLabel[] {jLBLpd_ind,jLBLtc_ind,jLBLv_ind},new JLabel[] {jLBLpd_icon,jLBLtc_icon,jLBLv_icon},new String[] {Ipd1,Itc1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\ug3.jpg")));
    jPback_tc.setVisible(false);jPback_pd.setVisible(false);jPback_v.setVisible(false);jPback_p.setVisible(true);
    }//GEN-LAST:event_jLBLprevious_vMouseClicked

    private void jLBLprevious_vMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_vMouseEntered
    jLBLprevious_v.setIcon(new ImageIcon(getClass().getClassLoader().getResource(PP_e)));
    }//GEN-LAST:event_jLBLprevious_vMouseEntered

    private void jLBLprevious_vMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLprevious_vMouseExited
    jLBLprevious_v.setIcon(new ImageIcon(getClass().getClassLoader().getResource(PP)));
    }//GEN-LAST:event_jLBLprevious_vMouseExited
String n_s="Icons\\icons8_Round_25px.png";
String s="Icons\\icons8_Filled_Circle_25px.png";
    private void jLBLagreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLagreeMouseClicked
    if(jCHKagree.isSelected()){
        jCHKagree.setSelected(false);
        jLBLagree.setIcon(new ImageIcon(getClass().getClassLoader().getResource(n_s)));
    }
    else if(jCHKagree.isSelected()==false){
        jCHKagree.setSelected(true);
        jLBLagree.setIcon(new ImageIcon(getClass().getClassLoader().getResource(s)));
    }
    }//GEN-LAST:event_jLBLagreeMouseClicked

    private void jLBLnpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnpMouseEntered
    jLBLnp.setIcon(new ImageIcon(getClass().getClassLoader().getResource(NP_e)));
    }//GEN-LAST:event_jLBLnpMouseEntered

    private void jLBLnpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnpMouseExited
    jLBLnp.setIcon(new ImageIcon(getClass().getClassLoader().getResource(NP)));
    }//GEN-LAST:event_jLBLnpMouseExited

    private void jLBLnpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLnpMouseClicked
    setSelectpane(new JPanel[] {jPpd},new JLabel[] {jLBLpd_txt},new JLabel[] {jLBLpd_ind},new JLabel[] {jLBLpd_icon},new String[] {Ipd2});
    setDeSelectpane(new JPanel[] {jPtc,jPp,jPv},new JLabel[] {jLBLtc_txt,jLBLp_txt,jLBLv_txt},new JLabel[] {jLBLtc_ind,jLBLp_ind,jLBLv_ind},new JLabel[] {jLBLtc_icon,jLBLp_icon,jLBLv_icon},new String[] {Itc1,Ip1,Iv1});
    jLBLback.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Images\\1 (4).jpg")));
    jPback_tc.setVisible(false);jPback_p.setVisible(false);jPback_v.setVisible(false);jPback_pd.setVisible(true);
    }//GEN-LAST:event_jLBLnpMouseClicked

    private void jLBLsignupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLsignupMouseEntered
    jLBLsignup.setForeground(new Color(0,185,165));
    jLBLsignup_icon.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_50px_1.png")));
    }//GEN-LAST:event_jLBLsignupMouseEntered

    private void jLBLsignupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLsignupMouseExited
    jLBLsignup.setForeground(new Color(0,145,125));
    jLBLsignup_icon.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_50px_2.png")));
    }//GEN-LAST:event_jLBLsignupMouseExited

    private void jLBLsignup_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLsignup_iconMouseEntered
    jLBLsignup.setForeground(new Color(0,185,165));
    jLBLsignup_icon.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_50px_1.png")));
    }//GEN-LAST:event_jLBLsignup_iconMouseEntered

    private void jLBLsignup_iconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLsignup_iconMouseExited
    jLBLsignup.setForeground(new Color(0,145,125));
    jLBLsignup_icon.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_50px_2.png")));
    }//GEN-LAST:event_jLBLsignup_iconMouseExited

    private void jPsignupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPsignupMouseEntered
    jLBLsignup.setForeground(new Color(0,185,165));
    jLBLsignup_icon.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_50px_1.png")));
    }//GEN-LAST:event_jPsignupMouseEntered

    private void jPsignupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPsignupMouseExited
    jLBLsignup.setForeground(new Color(0,185,165));
    jLBLsignup_icon.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_50px_1.png")));
    }//GEN-LAST:event_jPsignupMouseExited

    private void jTFcaptchaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFcaptchaMousePressed
        jTFcaptcha.setCaretPosition(0);
    }//GEN-LAST:event_jTFcaptchaMousePressed

    private void jTFcaptchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFcaptchaActionPerformed

    }//GEN-LAST:event_jTFcaptchaActionPerformed

    private void jTFcaptchaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFcaptchaKeyPressed
        if(jTFcaptcha.getForeground()!=new Color(255,255,255,255)){
            if(jTFcaptcha.getText().equals("Enter Here")){
                jTFcaptcha.setText("");
            }
        }
        jTFcaptcha.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFcaptchaKeyPressed

    private void jTFcaptchaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFcaptchaKeyReleased
        if(jTFcaptcha.getText().isEmpty()){
            jTFcaptcha.setText("Enter Here");
            jTFcaptcha.setCaretPosition(0);
            jTFcaptcha.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFcaptchaKeyReleased

    private void jLBLverify_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_imgMouseEntered
    jLBLverify_img.setForeground(Color.WHITE);
    jLBLverify_icon_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_2.png")));
    }//GEN-LAST:event_jLBLverify_imgMouseEntered

    private void jLBLverify_icon_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_icon_imgMouseEntered
    jLBLverify_img.setForeground(Color.WHITE);
    jLBLverify_icon_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_2.png")));
    }//GEN-LAST:event_jLBLverify_icon_imgMouseEntered

    private void jPverify_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPverify_imgMouseEntered
    jLBLverify_img.setForeground(Color.WHITE);
    jLBLverify_icon_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_2.png")));
    }//GEN-LAST:event_jPverify_imgMouseEntered

    private void jLBLverify_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_imgMouseExited
    jLBLverify_img.setForeground(new Color(170,170,170,255));
    jLBLverify_icon_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_1.png")));
    }//GEN-LAST:event_jLBLverify_imgMouseExited

    private void jLBLverify_icon_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_icon_imgMouseExited
    jLBLverify_img.setForeground(new Color(170,170,170,255));
    jLBLverify_icon_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_1.png")));
    }//GEN-LAST:event_jLBLverify_icon_imgMouseExited

    private void jPverify_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPverify_imgMouseExited
    jLBLverify_img.setForeground(new Color(170,170,170,255));
    jLBLverify_icon_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_1.png")));
    }//GEN-LAST:event_jPverify_imgMouseExited
Border human_s=BorderFactory.createLineBorder(new Color(0,192,203,255),1);
Border human_n=BorderFactory.createLineBorder(new Color(0,0,0,0),1);
    private void jLBLverify_textMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_textMouseEntered
    jLBLverify_text.setForeground(Color.WHITE);
    jLBLverify_icon_text.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_2.png")));
    }//GEN-LAST:event_jLBLverify_textMouseEntered

    private void jLBLverify_icon_textMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_icon_textMouseEntered
    jLBLverify_text.setForeground(Color.WHITE);
    jLBLverify_icon_text.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_2.png")));
    }//GEN-LAST:event_jLBLverify_icon_textMouseEntered

    private void jPverify_textMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPverify_textMouseEntered
    jLBLverify_text.setForeground(Color.WHITE);
    jLBLverify_icon_text.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_2.png")));
    }//GEN-LAST:event_jPverify_textMouseEntered

    private void jLBLverify_textMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_textMouseExited
    jLBLverify_text.setForeground(new Color(170,170,170));
    jLBLverify_icon_text.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_1.png")));
    }//GEN-LAST:event_jLBLverify_textMouseExited

    private void jLBLverify_icon_textMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_icon_textMouseExited
    jLBLverify_text.setForeground(new Color(170,170,170));
    jLBLverify_icon_text.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_1.png")));
    }//GEN-LAST:event_jLBLverify_icon_textMouseExited

    private void jPverify_textMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPverify_textMouseExited
    jLBLverify_text.setForeground(new Color(170,170,170));
    jLBLverify_icon_text.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Search_More_32px_1.png")));
    }//GEN-LAST:event_jPverify_textMouseExited

    private void jLBLh_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLh_1MouseClicked
    if(jCHKh_1.isSelected()){
        jCHKh_1.setSelected(false);
        jLBLh_1.setBorder(human_n);
    }
    else if(jCHKh_1.isSelected()==false){
        jCHKh_1.setSelected(true);
        jLBLh_1.setBorder(human_s);
    }
    }//GEN-LAST:event_jLBLh_1MouseClicked

    private void jLBLh_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLh_2MouseClicked
    if(jCHKh_2.isSelected()){
        jCHKh_2.setSelected(false);
        jLBLh_2.setBorder(human_n);
    }
    else if(jCHKh_2.isSelected()==false){
        jCHKh_2.setSelected(true);
        jLBLh_2.setBorder(human_s);
    }
    }//GEN-LAST:event_jLBLh_2MouseClicked

    private void jLBLh_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLh_3MouseClicked
    if(jCHKh_3.isSelected()){
        jCHKh_3.setSelected(false);
        jLBLh_3.setBorder(human_n);
    }
    else if(jCHKh_3.isSelected()==false){
        jCHKh_3.setSelected(true);
        jLBLh_3.setBorder(human_s);
    }
    }//GEN-LAST:event_jLBLh_3MouseClicked

    private void jLBLh_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLh_4MouseClicked
    if(jCHKh_4.isSelected()){
        jCHKh_4.setSelected(false);
        jLBLh_4.setBorder(human_n);
    }
    else if(jCHKh_4.isSelected()==false){
        jCHKh_4.setSelected(true);
        jLBLh_4.setBorder(human_s);
    }
    }//GEN-LAST:event_jLBLh_4MouseClicked

    private void jLBLh_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLh_5MouseClicked
    if(jCHKh_5.isSelected()){
        jCHKh_5.setSelected(false);
        jLBLh_5.setBorder(human_n);
    }
    else if(jCHKh_5.isSelected()==false){
        jCHKh_5.setSelected(true);
        jLBLh_5.setBorder(human_s);
    }
    }//GEN-LAST:event_jLBLh_5MouseClicked

    private void jLBLh_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLh_6MouseClicked
    if(jCHKh_6.isSelected()){
        jCHKh_6.setSelected(false);
        jLBLh_6.setBorder(human_n);
    }
    else if(jCHKh_6.isSelected()==false){
        jCHKh_6.setSelected(true);
        jLBLh_6.setBorder(human_s);
    }
    }//GEN-LAST:event_jLBLh_6MouseClicked

    private void jLBLreload_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLreload_imgMouseEntered
    jLBLreload_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Sync_50px_3.png")));
    }//GEN-LAST:event_jLBLreload_imgMouseEntered

    private void jLBLreload_captchaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLreload_captchaMouseEntered
    jLBLreload_captcha.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Sync_50px_3.png")));
    }//GEN-LAST:event_jLBLreload_captchaMouseEntered

    private void jLBLreload_imgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLreload_imgMouseExited
    jLBLreload_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Sync_50px_1.png")));
    }//GEN-LAST:event_jLBLreload_imgMouseExited

    private void jLBLreload_captchaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLreload_captchaMouseExited
    jLBLreload_captcha.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Sync_50px_1.png")));
    }//GEN-LAST:event_jLBLreload_captchaMouseExited

    private void jLBLreload_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLreload_imgMouseClicked
    clearcorrect();
    reload_human();
    }//GEN-LAST:event_jLBLreload_imgMouseClicked

    private void jLBLverify_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_imgMouseClicked
    boolean t1=false,t2=false,t3=false,t4=false,t5=false,t6=false;
    if(jCHK_cor1.isSelected()){
        t1=true;
    }
    if(jCHK_cor2.isSelected()){
        t2=true;
    }
    if(jCHK_cor3.isSelected()){
        t3=true;
    }
    if(jCHK_cor4.isSelected()){
        t4=true;
    }
    if(jCHK_cor5.isSelected()){
        t5=true;
    }
    if(jCHK_cor6.isSelected()){
        t6=true;
    }
    if(jCHKh_1.isSelected()==t1){
        if(jCHKh_2.isSelected()==t2){
        if(jCHKh_3.isSelected()==t3){
        if(jCHKh_4.isSelected()==t4){
        if(jCHKh_5.isSelected()==t5){
        if(jCHKh_6.isSelected()==t6){
        jCHKimg_verify.setSelected(true);
        jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_48px.png")));
    }else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }//GEN-LAST:event_jLBLverify_imgMouseClicked

    private void jLBLverify_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_textMouseClicked
    jCHKverify_txt.setSelected(false);
    String captcha=jTFcaptcha.getText();
    String corCap=jLBLcaptcha_cor.getText();
    if(captcha.equals(corCap)){
        jCHKverify_txt.setSelected(true);
        jLBLverified_txt.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_48px.png")));
    }else{
        jCHKverify_txt.setSelected(false);
        jLBLverified_txt.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
    }
    }//GEN-LAST:event_jLBLverify_textMouseClicked

    private void jLBLreload_captchaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLreload_captchaMouseClicked
    jCHKverify_txt.setSelected(false);
    reload_captcha();
    }//GEN-LAST:event_jLBLreload_captchaMouseClicked

    private void jLBLverify_icon_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_icon_imgMouseClicked
    boolean t1=false,t2=false,t3=false,t4=false,t5=false,t6=false;
    if(jCHK_cor1.isSelected()){
        t1=true;
    }
    if(jCHK_cor2.isSelected()){
        t2=true;
    }
    if(jCHK_cor3.isSelected()){
        t3=true;
    }
    if(jCHK_cor4.isSelected()){
        t4=true;
    }
    if(jCHK_cor5.isSelected()){
        t5=true;
    }
    if(jCHK_cor6.isSelected()){
        t6=true;
    }
    if(jCHKh_1.isSelected()==t1){
        if(jCHKh_2.isSelected()==t2){
        if(jCHKh_3.isSelected()==t3){
        if(jCHKh_4.isSelected()==t4){
        if(jCHKh_5.isSelected()==t5){
        if(jCHKh_6.isSelected()==t6){
        jCHKimg_verify.setSelected(true);
        jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_48px.png")));
    }else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }        
    }//GEN-LAST:event_jLBLverify_icon_imgMouseClicked

    private void jPverify_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPverify_imgMouseClicked
    boolean t1=false,t2=false,t3=false,t4=false,t5=false,t6=false;
    if(jCHK_cor1.isSelected()){
        t1=true;
    }
    if(jCHK_cor2.isSelected()){
        t2=true;
    }
    if(jCHK_cor3.isSelected()){
        t3=true;
    }
    if(jCHK_cor4.isSelected()){
        t4=true;
    }
    if(jCHK_cor5.isSelected()){
        t5=true;
    }
    if(jCHK_cor6.isSelected()){
        t6=true;
    }
    if(jCHKh_1.isSelected()==t1){
        if(jCHKh_2.isSelected()==t2){
        if(jCHKh_3.isSelected()==t3){
        if(jCHKh_4.isSelected()==t4){
        if(jCHKh_5.isSelected()==t5){
        if(jCHKh_6.isSelected()==t6){
        jCHKimg_verify.setSelected(true);
        jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_48px.png")));
    }else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }
        else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }else{
            jLBL_success_img.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
        }
    }//GEN-LAST:event_jPverify_imgMouseClicked

    private void jLBLsignupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLsignupMouseClicked
    boolean tc=true,pd=true,p=true,v=true;
    if(jCHKagree.isSelected()==false){
        tc=false;
        JOptionPane.showMessageDialog(null, "Please accept the Terms & Conditions", "Conditions not yet approved", 0,null);
    }
    if(jTFfirst_name.getText().equals("First Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid First Name \n 'First Name' will not be accepted as an entry", "Invalid First Name", 0,null);
        pd=false;
    }
    if(jTFlast_name.getText().equals("Last Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Last Name \n 'Last Name' will not be accepted as an entry", "Invalid Last Name", 0,null);
        pd=false;
    } 
    if(jTFf_name.getText().equals("Father's Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Father's Name \n 'Father's Name' will not be accepted as an entry", "Invalid Father's Name", 0,null);
        pd=false;
    }
    if(jTFm_name.getText().equals("Mother's Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Mother's Name \n 'Mother's Name' will not be accepted as an entry", "Invalid Mother's name", 0,null);
        pd=false;
    }
    String dob=jTFdob.getText();
    if(jTFdob.getText().equals("DOB")){
        JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
        pd=false;
    } 
    String sub1,sub2,sub3;
    if(dob.length()==10){
        int i=0,k=1;
        while(k<=4){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
        sub1=dob.substring(4,5);
        if(!sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in 'yyyy-mm-dd' format", "Invalid Date", 0,null);
                pd=false;
            }
        i=5;k=6;
        while(k<=7){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
        sub1=dob.substring(7,8);
        if(!sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in 'yyyy-mm-dd' format", "Invalid Date", 0,null);
                pd=false;
            }
        i=8;k=9;
        while(k<=10){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
    }else{
        JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid date", 0,null);
        pd=false;
    }
    if(jTFage.getText().equals("Age")){
        JOptionPane.showMessageDialog(null, "Enter a valid Age \n 'Age' will not be accepted as an entry", "Invalid Age", 0,null);
        pd=false;
    }
    
    if(jTFusername.getText().equals("User Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid User Name \n 'User Name' will not be accepted as an entry", "Invalid User Name", 0,null);
        p=false;
    }
    else if(!jTFusername.getText().equals("User Name")){
        try {
                 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 String db_url="jdbc:mysql://localhost:3306/project_JAVIS";
                 Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                 Statement smt=conn.createStatement();

                 String username=jTFusername.getText();
                 
      
                 String sql="select USER_ID from clients_JAVIS where USER_ID='"+username+"';";
                 ResultSet rs=smt.executeQuery(sql);
                 String res="";
                 if (username.equals("User Name")) {
            JOptionPane.showMessageDialog(null,"Invalid username");
            p=false;
        } else {
        
                 while(rs.next()){
                 res=rs.getString("USER_ID");
                 }
                 if(res.equals("")){
                     
                 }else{
                     JOptionPane.showMessageDialog(null, "The user name has already been taken Please change your user name");
                     p=false;
                 }
                 }
                 rs.close();
                 smt.close();
                 conn.close();

                 }
                catch(Exception e){
                 JOptionPane.showMessageDialog(null,"Error in connectivity :"+e);
                }
        
    }
    if(jTFemail.getText().equals("e-mail ID")){
        JOptionPane.showMessageDialog(null, "Enter a valid e-mail ID \n 'e-mail ID' will not be accepted as an entry", "Invalid e-mail ID", 0,null);
        p=false;
    }
    if(!jTFemail.getText().equals("e-mail Id")){
         if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", jTFemail.getText()))) 
{
            JOptionPane.showMessageDialog(null, "Enter a valid e-mail ID \n the email id must be in the format somebody@something.somthing ", "Invalid e-mail ID", 0,null);
            p=false;
            }
         
    }
    if(jLBLproloc.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Please select a profile pic \n profile must be in png format in png format", "Profile picture not selected", 0,null);
        pd=false;
    }
    if(!jLBLproloc.getText().equals("")){
    String pr=jLBLproloc.getText();
    String pb=pr.substring(pr.length()-3,pr.length());
    if(!pb.equals("png")){
        JOptionPane.showMessageDialog(null, "profile picture must be in png format in png format", "Profile picture format error", 0,null);
        jLBLproloc.setText("");
        jLBLprofile_pic.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_100px.png")));
    }
    }
    if(jCHKverify_txt.isSelected()==false){
        JOptionPane.showMessageDialog(null, "Captcha code not yet verified", "Human verification Error", 0,null);
        v=false;
    }
    if(jCHKimg_verify.isSelected()==false){
        JOptionPane.showMessageDialog(null, "Image Human verification not yet verified", "Human verification Error", 0,null);
        v=false;
    }
    
    
    
    
    if(tc==true){
        if(pd==true){
            if(p==true){
                if(v==true){
                    String User_ID,Password,FirstName,LastName,Sex="M";String DOB,Age,Email_id,Father_name,Mother_name;
                    
                    User_ID=jTFusername.getText();
                    Password=jPFpassword.getText();
                    FirstName=jTFfirst_name.getText();
                    LastName=jTFlast_name.getText();
                    if(jRBmal.isSelected()){
                        Sex="M";
                    }
                    if(jRBfem.isSelected()){
                        Sex="F";
                    }
                    if(jRBtra.isSelected()){
                        Sex="T";
                    }
                    DOB=jTFdob.getText();
                    Age=jTFage.getText();
                    Email_id=jTFemail.getText();
                    Father_name=jTFf_name.getText();
                    Mother_name=jTFm_name.getText();
                    
                    
                    
                    
                    String contain="12345 67890abc!@#$ %&*^*()defghij klmnopqrstu vwxyzABCDEFGHIJLM NOPQRSTUVWXYZ";
                    Random rnd=new Random();
                    StringBuilder sb=new StringBuilder(5);
                    StringBuilder sb2=new StringBuilder(5);
                    StringBuilder sb3=new StringBuilder(5);
                    for(int i=0;i<5;i++){
                        sb.append(contain.charAt(rnd.nextInt(contain.length())));
                        sb2.append(contain.charAt(rnd.nextInt(contain.length())));
                        sb3.append(contain.charAt(rnd.nextInt(contain.length())));
                    }
                    String brand=sb.toString();
                    String mrand=sb2.toString();
                    String frand=sb3.toString();
                    
                    
                    
                    
                    int mid=Password.length();
                    String midtext1=Password.substring(0,mid/2);
                    String midtext2=Password.substring(mid/2);
                    String encrypted=brand+midtext1+mrand+midtext2+frand;
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        PreparedStatement pst=null;
                        String sql="insert into CLIENTS_JAVIS(USER_ID,PASSWORD,FIRST_NAME,LAST_NAME,SEX,DOB,EMAIL_ID,FATHER_NAME,MOTHER_NAME,AGE,PROFILE_PIC_LOCATION,J_COINS,CONVERTER,LAUNCHER) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);"; 
                        pst =conn.prepareStatement(sql);
                        pst.setString(1, User_ID);
                        pst.setString(2, ""+encrypted);
                        pst.setString(3, FirstName);
                        pst.setString(4, LastName);
                        pst.setString(5, Sex);
                        pst.setString(6, DOB);
                        pst.setString(7, Email_id);
                        pst.setString(8, Father_name);
                        pst.setString(9, Mother_name);
                        pst.setString(10, Age);
                        pst.setBytes(11, person_image);
                        pst.setString(12, "10000");
                        pst.setString(13, "N");
                        pst.setString(14, "N");
                        pst.execute();
                        pst.close();
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        PreparedStatement pst=null;
                        String sql="insert into CLIENTS_MANAGE_STRING_JAVIS VALUES(?,?,?,?,?);"; 
                        pst=conn.prepareStatement(sql);
                        pst.setString(1, User_ID);
                        pst.setString(2, ""+encrypted);
                        pst.setString(3, brand);
                        pst.setString(4, mrand);
                        pst.setString(5, frand);
                        pst.execute();
                        pst.close();
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_PROGRESS_JAVIS(CATAGORY varchar(100),WINS BIGint,LOSSES BIGint,MONEY_GAINED BIGint,MONEY_LOST BIGint,PROFIT_LOSS ENUM('P','L'),AMOUNT_PROFIT_LOSS BIGINT);";     
                        String sql2="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Lottery',0,0,0,0,'P',0);"; 
                        String sql3="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Card',0,0,0,0,'P',0);"; 
                        String sql4="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Spinning_wheel',0,0,0,0,'P',0);"; 
                        String sql5="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Spin',0,0,0,0,'P',0);"; 
                        int rc=smt.executeUpdate(sql1);
                        int rc2=smt.executeUpdate(sql2);
                        int rc3=smt.executeUpdate(sql3);
                        int rc4=smt.executeUpdate(sql4);
                        int rc5=smt.executeUpdate(sql5);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_LOTTERY_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,NO_OF_BETS BIGINT,AMOUNT_BET BIGINT,LOTTERY_NO BIGINT,LOTTERY_WIN_NO BIGINT,WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_CARD_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,CARD_BET VARCHAR(10),CARD_GOT VARCHAR(10),WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_SPINNINGWHEEL_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,NUM_BET BIGINT,NUM_GOT BIGINT,WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_SPIN_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,GOT_1 VARCHAR(100),GOT_2 VARCHAR(100),GOT_3 VARCHAR(100),WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    LOGIN_JAVIS log=new LOGIN_JAVIS();
                    log.setVisible(true);
                    this.dispose();
                }
            }
        }
    }
    }//GEN-LAST:event_jLBLsignupMouseClicked
int xx,xy;
    private void jPsidepaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPsidepaneMousePressed
    xx = evt.getX();
    xy = evt.getY();
    }//GEN-LAST:event_jPsidepaneMousePressed

    private void jPsidepaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPsidepaneMouseDragged
    int x = evt.getXOnScreen();
    int y = evt.getYOnScreen();
    this.setLocation(x-xx,y-xy);
    }//GEN-LAST:event_jPsidepaneMouseDragged

    private void jTFemailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFemailMousePressed
    jTFemail.setCaretPosition(0);
    }//GEN-LAST:event_jTFemailMousePressed

    private void jTFemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFemailActionPerformed

    private void jTFemailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFemailKeyPressed
        if(jTFemail.getForeground()!=new Color(255,255,255,255)){
            if(jTFemail.getText().equals("e-mail ID")){
                jTFemail.setText("");
            }
        }
        jTFemail.setForeground(new Color(255,255,255,255));
    }//GEN-LAST:event_jTFemailKeyPressed

    private void jTFemailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFemailKeyReleased
      if(jTFemail.getText().isEmpty()){
            jTFemail.setText("e-mail ID");
            jTFemail.setCaretPosition(0);
            jTFemail.setForeground(new Color(125,125,125,255));
        }
    }//GEN-LAST:event_jTFemailKeyReleased

    private void jTFdobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFdobKeyTyped
    char ch=evt.getKeyChar();
    if(ch>='a'&&ch<='z'){
        evt.consume();
    }
    if (ch>='A'&&ch<='Z') {
        evt.consume();
    }if((!(ch>'0'&&ch<'9'))){
        if(ch!='-'){
            evt.consume();
        }
    }
    }//GEN-LAST:event_jTFdobKeyTyped

    private void jLBLuser_availabilityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLuser_availabilityMouseClicked
    try {
                 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 String db_url="jdbc:mysql://localhost:3306/project_JAVIS";
                 Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                 Statement smt=conn.createStatement();

                 String username=jTFusername.getText();
                 
      
                 String sql="select USER_ID from clients_JAVIS where USER_ID='"+username+"';";
                 ResultSet rs=smt.executeQuery(sql);
                 String res="";
                 if (username.equals("User Name")) {
            JOptionPane.showMessageDialog(null, "Enter a valid User Name \n 'User Name' will not be accepted as an entry", "Invalid User Name", 0,null);
        } else {
        
                 while(rs.next()){
                 res=rs.getString("USER_ID");
                 }
                 if(res.equals("")){
                     jLBLuser_availability.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_32px.png")));
                     JOptionPane.showMessageDialog(null, "You are good to go");
                 }else{
                     jLBLuser_availability.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Delete_32px.png")));
                     JOptionPane.showMessageDialog(null, "The user name has already been taken Please change your user name");
                 }
                 }
                 rs.close();
                 smt.close();
                 conn.close();

                 }
                catch(Exception e){
                 JOptionPane.showMessageDialog(null,"Error in connectivity :"+e);
                }
    }//GEN-LAST:event_jLBLuser_availabilityMouseClicked

    private void jLBLuser_availabilityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLuser_availabilityMouseEntered
    jLBLuser_availability.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Find_User_Male_32px_2.png")));
    }//GEN-LAST:event_jLBLuser_availabilityMouseEntered

    private void jLBLuser_availabilityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLuser_availabilityMouseExited
    jLBLuser_availability.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Find_User_Male_32px_1.png")));
    }//GEN-LAST:event_jLBLuser_availabilityMouseExited

    private void jLBLvis1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLvis1MouseClicked
    if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", jTFemail.getText()))) 
{
            JOptionPane.showMessageDialog(null, "Please enter a valid email \n the email id must be of format somebody@something.someting", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "The email is valid", "Good!", JOptionPane.INFORMATION_MESSAGE);

            }

    }//GEN-LAST:event_jLBLvis1MouseClicked

    private void jLBLvis1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLvis1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLBLvis1MouseEntered

    private void jLBLvis1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLvis1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLBLvis1MouseExited

    private void jLBLsignup_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLsignup_iconMouseClicked
    boolean tc=true,pd=true,p=true,v=true;
    if(jCHKagree.isSelected()==false){
        tc=false;
        JOptionPane.showMessageDialog(null, "Please accept the Terms & Conditions", "Conditions not yet approved", 0,null);
    }
    if(jTFfirst_name.getText().equals("First Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid First Name \n 'First Name' will not be accepted as an entry", "Invalid First Name", 0,null);
        pd=false;
    }
    if(jTFlast_name.getText().equals("Last Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Last Name \n 'Last Name' will not be accepted as an entry", "Invalid Last Name", 0,null);
        pd=false;
    } 
    if(jTFf_name.getText().equals("Father's Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Father's Name \n 'Father's Name' will not be accepted as an entry", "Invalid Father's Name", 0,null);
        pd=false;
    }
    if(jTFm_name.getText().equals("Mother's Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Mother's Name \n 'Mother's Name' will not be accepted as an entry", "Invalid Mother's name", 0,null);
        pd=false;
    }
    String dob=jTFdob.getText();
    if(jTFdob.getText().equals("DOB")){
        JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
        pd=false;
    } 
    String sub1,sub2,sub3;
    if(dob.length()==10){
        int i=0,k=1;
        while(k<=4){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
        sub1=dob.substring(4,5);
        if(!sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in 'yyyy-mm-dd' format", "Invalid Date", 0,null);
                pd=false;
            }
        i=5;k=6;
        while(k<=7){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
        sub1=dob.substring(7,8);
        if(!sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in 'yyyy-mm-dd' format", "Invalid Date", 0,null);
                pd=false;
            }
        i=8;k=9;
        while(k<=10){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
    }else{
        JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid date", 0,null);
        pd=false;
    }
    if(jTFage.getText().equals("Age")){
        JOptionPane.showMessageDialog(null, "Enter a valid Age \n 'Age' will not be accepted as an entry", "Invalid Age", 0,null);
        pd=false;
    }
    
    if(jTFusername.getText().equals("User Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid User Name \n 'User Name' will not be accepted as an entry", "Invalid User Name", 0,null);
        p=false;
    }
    else if(!jTFusername.getText().equals("User Name")){
        try {
                 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 String db_url="jdbc:mysql://localhost:3306/project_JAVIS";
                 Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                 Statement smt=conn.createStatement();

                 String username=jTFusername.getText();
                 
      
                 String sql="select USER_ID from clients_JAVIS where USER_ID='"+username+"';";
                 ResultSet rs=smt.executeQuery(sql);
                 String res="";
                 if (username.equals("User Name")) {
            JOptionPane.showMessageDialog(null,"Invalid username");
            p=false;
        } else {
        
                 while(rs.next()){
                 res=rs.getString("USER_ID");
                 }
                 if(res.equals("")){
                     
                 }else{
                     JOptionPane.showMessageDialog(null, "The user name has already been taken Please change your user name");
                     p=false;
                 }
                 }
                 rs.close();
                 smt.close();
                 conn.close();

                 }
                catch(Exception e){
                 JOptionPane.showMessageDialog(null,"Error in connectivity :"+e);
                }
        
    }
    if(jTFemail.getText().equals("e-mail ID")){
        JOptionPane.showMessageDialog(null, "Enter a valid e-mail ID \n 'e-mail ID' will not be accepted as an entry", "Invalid e-mail ID", 0,null);
        p=false;
    }
    if(!jTFemail.getText().equals("e-mail Id")){
         if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", jTFemail.getText()))) 
{
            JOptionPane.showMessageDialog(null, "Enter a valid e-mail ID \n the email id must be in the format somebody@something.somthing ", "Invalid e-mail ID", 0,null);
            p=false;
            }
         
    }
    if(jLBLproloc.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Please select a profile pic \n profile must be in png format in png format", "Profile picture not selected", 0,null);
        pd=false;
    }
    if(!jLBLproloc.getText().equals("")){
    String pr=jLBLproloc.getText();
    String pb=pr.substring(pr.length()-3,pr.length());
    if(!pb.equals("png")){
        JOptionPane.showMessageDialog(null, "profile picture must be in png format in png format", "Profile picture format error", 0,null);
        jLBLproloc.setText("");
        jLBLprofile_pic.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_100px.png")));
    }
    }
    if(jCHKverify_txt.isSelected()==false){
        JOptionPane.showMessageDialog(null, "Captcha code not yet verified", "Human verification Error", 0,null);
        v=false;
    }
    if(jCHKimg_verify.isSelected()==false){
        JOptionPane.showMessageDialog(null, "Image Human verification not yet verified", "Human verification Error", 0,null);
        v=false;
    }
    
    
    
    
    if(tc==true){
        if(pd==true){
            if(p==true){
                if(v==true){
                    String User_ID,Password,FirstName,LastName,Sex="M";String DOB,Age,Email_id,Father_name,Mother_name;
                    
                    User_ID=jTFusername.getText();
                    Password=jPFpassword.getText();
                    FirstName=jTFfirst_name.getText();
                    LastName=jTFlast_name.getText();
                    if(jRBmal.isSelected()){
                        Sex="M";
                    }
                    if(jRBfem.isSelected()){
                        Sex="F";
                    }
                    if(jRBtra.isSelected()){
                        Sex="T";
                    }
                    DOB=jTFdob.getText();
                    Age=jTFage.getText();
                    Email_id=jTFemail.getText();
                    Father_name=jTFf_name.getText();
                    Mother_name=jTFm_name.getText();
                    
                    
                    
                    
                    String contain="12345 67890abc!@#$ %&*^*()defghij klmnopqrstu vwxyzABCDEFGHIJLM NOPQRSTUVWXYZ";
                    Random rnd=new Random();
                    StringBuilder sb=new StringBuilder(5);
                    StringBuilder sb2=new StringBuilder(5);
                    StringBuilder sb3=new StringBuilder(5);
                    for(int i=0;i<5;i++){
                        sb.append(contain.charAt(rnd.nextInt(contain.length())));
                        sb2.append(contain.charAt(rnd.nextInt(contain.length())));
                        sb3.append(contain.charAt(rnd.nextInt(contain.length())));
                    }
                    String brand=sb.toString();
                    String mrand=sb2.toString();
                    String frand=sb3.toString();
                    
                    
                    
                    
                    int mid=Password.length();
                    String midtext1=Password.substring(0,mid/2);
                    String midtext2=Password.substring(mid/2);
                    String encrypted=brand+midtext1+mrand+midtext2+frand;
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        PreparedStatement pst=null;
                        String sql="insert into CLIENTS_JAVIS(USER_ID,PASSWORD,FIRST_NAME,LAST_NAME,SEX,DOB,EMAIL_ID,FATHER_NAME,MOTHER_NAME,AGE,PROFILE_PIC_LOCATION,J_COINS,CONVERTER,LAUNCHER) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);"; 
                        pst =conn.prepareStatement(sql);
                        pst.setString(1, User_ID);
                        pst.setString(2, ""+encrypted);
                        pst.setString(3, FirstName);
                        pst.setString(4, LastName);
                        pst.setString(5, Sex);
                        pst.setString(6, DOB);
                        pst.setString(7, Email_id);
                        pst.setString(8, Father_name);
                        pst.setString(9, Mother_name);
                        pst.setString(10, Age);
                        pst.setBytes(11, person_image);
                        pst.setString(12, "10000");
                        pst.setString(13, "N");
                        pst.setString(14, "N");
                        pst.execute();
                        pst.close();
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        PreparedStatement pst=null;
                        String sql="insert into CLIENTS_MANAGE_STRING_JAVIS VALUES(?,?,?,?,?);"; 
                        pst=conn.prepareStatement(sql);
                        pst.setString(1, User_ID);
                        pst.setString(2, ""+encrypted);
                        pst.setString(3, brand);
                        pst.setString(4, mrand);
                        pst.setString(5, frand);
                        pst.execute();
                        pst.close();
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_PROGRESS_JAVIS(CATAGORY varchar(100),WINS BIGint,LOSSES BIGint,MONEY_GAINED BIGint,MONEY_LOST BIGint,PROFIT_LOSS ENUM('P','L'),AMOUNT_PROFIT_LOSS BIGINT);";     
                        String sql2="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Lottery',0,0,0,0,'P',0);"; 
                        String sql3="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Card',0,0,0,0,'P',0);"; 
                        String sql4="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Spinning_wheel',0,0,0,0,'P',0);"; 
                        String sql5="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Spin',0,0,0,0,'P',0);"; 
                        int rc=smt.executeUpdate(sql1);
                        int rc2=smt.executeUpdate(sql2);
                        int rc3=smt.executeUpdate(sql3);
                        int rc4=smt.executeUpdate(sql4);
                        int rc5=smt.executeUpdate(sql5);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_LOTTERY_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,NO_OF_BETS BIGINT,AMOUNT_BET BIGINT,LOTTERY_NO BIGINT,LOTTERY_WIN_NO BIGINT,WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_CARD_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,CARD_BET VARCHAR(10),CARD_GOT VARCHAR(10),WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_SPINNINGWHEEL_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,NUM_BET BIGINT,NUM_GOT BIGINT,WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_SPIN_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,GOT_1 VARCHAR(100),GOT_2 VARCHAR(100),GOT_3 VARCHAR(100),WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    LOGIN_JAVIS log=new LOGIN_JAVIS();
                    log.setVisible(true);
                    this.dispose();
                }
            }
        }
    }
    }//GEN-LAST:event_jLBLsignup_iconMouseClicked

    private void jPsignupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPsignupMouseClicked
    boolean tc=true,pd=true,p=true,v=true;
    if(jCHKagree.isSelected()==false){
        tc=false;
        JOptionPane.showMessageDialog(null, "Please accept the Terms & Conditions", "Conditions not yet approved", 0,null);
    }
    if(jTFfirst_name.getText().equals("First Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid First Name \n 'First Name' will not be accepted as an entry", "Invalid First Name", 0,null);
        pd=false;
    }
    if(jTFlast_name.getText().equals("Last Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Last Name \n 'Last Name' will not be accepted as an entry", "Invalid Last Name", 0,null);
        pd=false;
    } 
    if(jTFf_name.getText().equals("Father's Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Father's Name \n 'Father's Name' will not be accepted as an entry", "Invalid Father's Name", 0,null);
        pd=false;
    }
    if(jTFm_name.getText().equals("Mother's Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid Mother's Name \n 'Mother's Name' will not be accepted as an entry", "Invalid Mother's name", 0,null);
        pd=false;
    }
    String dob=jTFdob.getText();
    if(jTFdob.getText().equals("DOB")){
        JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
        pd=false;
    } 
    String sub1,sub2,sub3;
    if(dob.length()==10){
        int i=0,k=1;
        while(k<=4){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
        sub1=dob.substring(4,5);
        if(!sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in 'yyyy-mm-dd' format", "Invalid Date", 0,null);
                pd=false;
            }
        i=5;k=6;
        while(k<=7){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
        sub1=dob.substring(7,8);
        if(!sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in 'yyyy-mm-dd' format", "Invalid Date", 0,null);
                pd=false;
            }
        i=8;k=9;
        while(k<=10){
            sub1=dob.substring(i,k);
            if(sub1.equals("-")){
                JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid Date", 0,null);
                pd=false;
            }
            i++;
            k++;
        }
    }else{
        JOptionPane.showMessageDialog(null, "Enter a valid DOB \n 'DOB' will not be accepted as an entry \n DOB must be in yyyy-mm-dd format", "Invalid date", 0,null);
        pd=false;
    }
    if(jTFage.getText().equals("Age")){
        JOptionPane.showMessageDialog(null, "Enter a valid Age \n 'Age' will not be accepted as an entry", "Invalid Age", 0,null);
        pd=false;
    }
    
    if(jTFusername.getText().equals("User Name")){
        JOptionPane.showMessageDialog(null, "Enter a valid User Name \n 'User Name' will not be accepted as an entry", "Invalid User Name", 0,null);
        p=false;
    }
    else if(!jTFusername.getText().equals("User Name")){
        try {
                 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 String db_url="jdbc:mysql://localhost:3306/project_JAVIS";
                 Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                 Statement smt=conn.createStatement();

                 String username=jTFusername.getText();
                 
      
                 String sql="select USER_ID from clients_JAVIS where USER_ID='"+username+"';";
                 ResultSet rs=smt.executeQuery(sql);
                 String res="";
                 if (username.equals("User Name")) {
            JOptionPane.showMessageDialog(null,"Invalid username");
            p=false;
        } else {
        
                 while(rs.next()){
                 res=rs.getString("USER_ID");
                 }
                 if(res.equals("")){
                     
                 }else{
                     JOptionPane.showMessageDialog(null, "The user name has already been taken Please change your user name");
                     p=false;
                 }
                 }
                 rs.close();
                 smt.close();
                 conn.close();

                 }
                catch(Exception e){
                 JOptionPane.showMessageDialog(null,"Error in connectivity :"+e);
                }
        
    }
    if(jTFemail.getText().equals("e-mail ID")){
        JOptionPane.showMessageDialog(null, "Enter a valid e-mail ID \n 'e-mail ID' will not be accepted as an entry", "Invalid e-mail ID", 0,null);
        p=false;
    }
    if(!jTFemail.getText().equals("e-mail Id")){
         if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", jTFemail.getText()))) 
{
            JOptionPane.showMessageDialog(null, "Enter a valid e-mail ID \n the email id must be in the format somebody@something.somthing ", "Invalid e-mail ID", 0,null);
            p=false;
            }
         
    }
    if(jLBLproloc.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Please select a profile pic \n profile must be in png format in png format", "Profile picture not selected", 0,null);
        pd=false;
    }
    if(!jLBLproloc.getText().equals("")){
    String pr=jLBLproloc.getText();
    String pb=pr.substring(pr.length()-3,pr.length());
    if(!pb.equals("png")){
        JOptionPane.showMessageDialog(null, "profile picture must be in png format in png format", "Profile picture format error", 0,null);
        jLBLproloc.setText("");
        jLBLprofile_pic.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Add_User_Male_100px.png")));
    }
    }
    if(jCHKverify_txt.isSelected()==false){
        JOptionPane.showMessageDialog(null, "Captcha code not yet verified", "Human verification Error", 0,null);
        v=false;
    }
    if(jCHKimg_verify.isSelected()==false){
        JOptionPane.showMessageDialog(null, "Image Human verification not yet verified", "Human verification Error", 0,null);
        v=false;
    }
    
    
    
    
    if(tc==true){
        if(pd==true){
            if(p==true){
                if(v==true){
                    String User_ID,Password,FirstName,LastName,Sex="M";String DOB,Age,Email_id,Father_name,Mother_name;
                    
                    User_ID=jTFusername.getText();
                    Password=jPFpassword.getText();
                    FirstName=jTFfirst_name.getText();
                    LastName=jTFlast_name.getText();
                    if(jRBmal.isSelected()){
                        Sex="M";
                    }
                    if(jRBfem.isSelected()){
                        Sex="F";
                    }
                    if(jRBtra.isSelected()){
                        Sex="T";
                    }
                    DOB=jTFdob.getText();
                    Age=jTFage.getText();
                    Email_id=jTFemail.getText();
                    Father_name=jTFf_name.getText();
                    Mother_name=jTFm_name.getText();
                    
                    
                    
                    
                    String contain="12345 67890abc!@#$ %&*^*()defghij klmnopqrstu vwxyzABCDEFGHIJLM NOPQRSTUVWXYZ";
                    Random rnd=new Random();
                    StringBuilder sb=new StringBuilder(5);
                    StringBuilder sb2=new StringBuilder(5);
                    StringBuilder sb3=new StringBuilder(5);
                    for(int i=0;i<5;i++){
                        sb.append(contain.charAt(rnd.nextInt(contain.length())));
                        sb2.append(contain.charAt(rnd.nextInt(contain.length())));
                        sb3.append(contain.charAt(rnd.nextInt(contain.length())));
                    }
                    String brand=sb.toString();
                    String mrand=sb2.toString();
                    String frand=sb3.toString();
                    
                    
                    
                    
                    int mid=Password.length();
                    String midtext1=Password.substring(0,mid/2);
                    String midtext2=Password.substring(mid/2);
                    String encrypted=brand+midtext1+mrand+midtext2+frand;
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        PreparedStatement pst=null;
                        String sql="insert into CLIENTS_JAVIS(USER_ID,PASSWORD,FIRST_NAME,LAST_NAME,SEX,DOB,EMAIL_ID,FATHER_NAME,MOTHER_NAME,AGE,PROFILE_PIC_LOCATION,J_COINS,CONVERTER,LAUNCHER) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);"; 
                        pst =conn.prepareStatement(sql);
                        pst.setString(1, User_ID);
                        pst.setString(2, ""+encrypted);
                        pst.setString(3, FirstName);
                        pst.setString(4, LastName);
                        pst.setString(5, Sex);
                        pst.setString(6, DOB);
                        pst.setString(7, Email_id);
                        pst.setString(8, Father_name);
                        pst.setString(9, Mother_name);
                        pst.setString(10, Age);
                        pst.setBytes(11, person_image);
                        pst.setString(12, "10000");
                        pst.setString(13, "N");
                        pst.setString(14, "N");
                        pst.execute();
                        pst.close();
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        PreparedStatement pst=null;
                        String sql="insert into CLIENTS_MANAGE_STRING_JAVIS VALUES(?,?,?,?,?);"; 
                        pst=conn.prepareStatement(sql);
                        pst.setString(1, User_ID);
                        pst.setString(2, ""+encrypted);
                        pst.setString(3, brand);
                        pst.setString(4, mrand);
                        pst.setString(5, frand);
                        pst.execute();
                        pst.close();
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_PROGRESS_JAVIS(CATAGORY varchar(100),WINS BIGint,LOSSES BIGint,MONEY_GAINED BIGint,MONEY_LOST BIGint,PROFIT_LOSS ENUM('P','L'),AMOUNT_PROFIT_LOSS BIGINT);";     
                        String sql2="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Lottery',0,0,0,0,'P',0);"; 
                        String sql3="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Card',0,0,0,0,'P',0);"; 
                        String sql4="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Spinning_wheel',0,0,0,0,'P',0);"; 
                        String sql5="insert into "+User_ID+"_PROGRESS_JAVIS VALUES('Spin',0,0,0,0,'P',0);"; 
                        int rc=smt.executeUpdate(sql1);
                        int rc2=smt.executeUpdate(sql2);
                        int rc3=smt.executeUpdate(sql3);
                        int rc4=smt.executeUpdate(sql4);
                        int rc5=smt.executeUpdate(sql5);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_LOTTERY_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,NO_OF_BETS BIGINT,AMOUNT_BET BIGINT,LOTTERY_NO BIGINT,LOTTERY_WIN_NO BIGINT,WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_CARD_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,CARD_BET VARCHAR(10),CARD_GOT VARCHAR(10),WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_SPINNINGWHEEL_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,NUM_BET BIGINT,NUM_GOT BIGINT,WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    
                    
                    
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                        Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                        Statement smt=conn.createStatement();
                        String sql1="create table "+User_ID+"_SPIN_JAVIS(SNO bigint unsigned not null auto_increment unique key,TIMING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,AMOUNT_BET BIGINT,GOT_1 VARCHAR(100),GOT_2 VARCHAR(100),GOT_3 VARCHAR(100),WIN_LOSE ENUM('W','L'),MONEY_EARNED BIGINT,MONEY_LOST BIGINT,FINAL_AMOUNT BIGINT);";
                        int rc=smt.executeUpdate(sql1);
                        smt.close();
                        conn.close();
   
                     }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,"Error in connectivity :\n"+e);
                    }
                    LOGIN_JAVIS log=new LOGIN_JAVIS();
                    log.setVisible(true);
                    this.dispose();
                }
            }
        }
    }
    }//GEN-LAST:event_jPsignupMouseClicked

    private void jLBLverify_icon_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBLverify_icon_textMouseClicked
    jCHKverify_txt.setSelected(false);
    String captcha=jTFcaptcha.getText();
    String corCap=jLBLcaptcha_cor.getText();
    if(captcha.equals(corCap)){
        jCHKverify_txt.setSelected(true);
        jLBLverified_txt.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_48px.png")));
    }else{
        jCHKverify_txt.setSelected(false);
        jLBLverified_txt.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
    }
    }//GEN-LAST:event_jLBLverify_icon_textMouseClicked

    private void jPverify_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPverify_textMouseClicked
    jCHKverify_txt.setSelected(false);
    String captcha=jTFcaptcha.getText();
    String corCap=jLBLcaptcha_cor.getText();
    if(captcha.equals(corCap)){
        jCHKverify_txt.setSelected(true);
        jLBLverified_txt.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Approval_48px.png")));
    }else{
        jCHKverify_txt.setSelected(false);
        jLBLverified_txt.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Icons\\icons8_Unlike_48px.png")));
    }
    }//GEN-LAST:event_jPverify_textMouseClicked

    private void jTFageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFageKeyTyped
    char ch=evt.getKeyChar();
    if(!(ch>='0'&&ch<='9')){
        evt.consume();
    }
    }//GEN-LAST:event_jTFageKeyTyped

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
    LOGIN_JAVIS log=new LOGIN_JAVIS();
    log.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked
/*try {
                 Class.forName("com.mysql.jdbc.Driver").newInstance();
                 String db_url="jdbc:mysql://localhost:3306/Project_JAVIS";
                 Connection conn= DriverManager.getConnection(db_url, "root", "mysql");
                 Statement smt=conn.createStatement();

                 String dob=jDCdob.getDateFormatString();
      
                 String sql="select year(now())-year('"+dob+"');";
                 ResultSet rs=smt.executeQuery(sql);
                 String res="";
                 while(rs.next()){
                 res=rs.getString(1);
                 jTFage.setText(""+res);
                 }
                 rs.close();
                 smt.close();
                 conn.close();

                 }
                catch(Exception e){
                 JOptionPane.showMessageDialog(null,"Error in connectivity :"+e);
                }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /*if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }/*
                
                */
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIGNUP_JAVIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SIGNUP_JAVIS().setVisible(true);
            }
        });
    }
    private void setSelectpane(JPanel [] pane,JLabel [] lbl_txt,JLabel [] lbl_ind,JLabel [] lbl_icon,String [] loc){
        if((pane.length==lbl_txt.length)&&(lbl_icon.length==loc.length)){
            for (int i=0;i<pane.length;i++) {
                pane[i].setBackground(new Color(87, 96, 111));
            }
            for (int i=0;i<lbl_txt.length;i++) {
                lbl_txt[i].setForeground(new Color(255,255,255));
                lbl_txt[i].setBackground(new Color(87, 96, 111));
            }
            for(int i=0;i<lbl_icon.length;i++){
                lbl_icon[i].setIcon(new ImageIcon(getClass().getClassLoader().getResource(loc[i])));
                lbl_icon[i].setBackground(new Color(87, 96, 111));
            }
            for(int i=0;i<lbl_ind.length;i++){
                lbl_ind[i].setBackground(new Color(255,255,255));
            }
        }
    }
    private void setDeSelectpane(JPanel [] pane,JLabel [] lbl_txt,JLabel [] lbl_ind,JLabel [] lbl_icon,String [] loc){
        if((pane.length==lbl_txt.length)&&(lbl_icon.length==loc.length)){
            for (int i=0;i<pane.length;i++) {
                pane[i].setBackground(new Color(53,59,72));
            }
            for (int i=0;i<lbl_txt.length;i++) {
                lbl_txt[i].setForeground(new Color(150,150,150));
                lbl_txt[i].setBackground(new Color(53,59,72));
            }
            for(int i=0;i<lbl_icon.length;i++){
                lbl_icon[i].setIcon(new ImageIcon(getClass().getClassLoader().getResource(loc[i])));
                lbl_icon[i].setBackground(new Color(53,59,72));
            }  
            for(int i=0;i<lbl_ind.length;i++){
                lbl_ind[i].setBackground(new Color(53,59,72));
            }
        }
    }
    private void setselectgender(JRadioButton[] rb,JLabel[] lbl_icon,JLabel[] lbl_gender,String [] loc){
        if((rb.length==lbl_icon.length)&&(lbl_gender.length==loc.length)){
            for (int i=0;i<rb.length;i++) {
                rb[i].setSelected(true);
            }
            for (int i=0;i<lbl_icon.length;i++) {
                lbl_icon[i].setIcon(new ImageIcon(getClass().getClassLoader().getResource(loc[i])));
            }
            for (int i=0;i<lbl_gender.length;i++) {
                lbl_gender[i].setForeground(Color.white);
            }
        }
    }
    private void setdeselectgender(JRadioButton[] rb,JLabel[] lbl_icon,JLabel[] lbl_gender,String [] loc){
        if((rb.length==lbl_icon.length)&&(lbl_gender.length==loc.length)){
            for (int i=0;i<rb.length;i++) {
                rb[i].setSelected(false);
            }
            for (int i=0;i<lbl_icon.length;i++) {
                lbl_icon[i].setIcon(new ImageIcon(getClass().getClassLoader().getResource(loc[i])));
            }
            for (int i=0;i<lbl_gender.length;i++) {
                lbl_gender[i].setForeground(new Color(125,125,125,255));
            }
        }
    }
    private void reload_human(){
        String it=jLBLhuman_imgdata.getText();
        String contain="abc";
        if(it.equals("a")){
            contain="bc";
        }
        if(it.equals("b")){
            contain="ac";
        }
        if(it.equals("c")){
            contain="ab";
        }
        Random rnd=new Random();
        StringBuilder sb=new StringBuilder(1);
        for(int i=0;i<1;i++){
        sb.append(contain.charAt(rnd.nextInt(contain.length())));
        }
        String random=sb.toString();
        jLBLhuman_imgdata.setText(random);
        if(random.equals("a")){
            jLBLh_1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\a1.png")));
            jLBLh_2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\a2.png")));
            jLBLh_3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\a3.png")));
            jLBLh_4.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\a4.png")));
            jLBLh_5.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\a5.png")));
            jLBLh_6.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\a6.png")));
            clearcorrect();
            jCHK_cor2.setSelected(true);
            jCHK_cor3.setSelected(true);
            jCHK_cor5.setSelected(true);
            jCHK_cor6.setSelected(true);
            jLBLhuman_img_text.setText("Select images with tree");
        }
        if(random.equals("b")){
            jLBLh_1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\b1.png")));
            jLBLh_2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\b2.png")));
            jLBLh_3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\b3.png")));
            jLBLh_4.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\b4.png")));
            jLBLh_5.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\b5.png")));
            jLBLh_6.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\b6.png")));
            clearcorrect();
            jCHK_cor5.setSelected(true);
            jCHK_cor6.setSelected(true);
            jLBLhuman_img_text.setText("Select images with car");
        }
        if(random.equals("c")){
            jLBLh_1.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\c1.png")));
            jLBLh_2.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\c2.png")));
            jLBLh_3.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\c3.png")));
            jLBLh_4.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\c4.png")));
            jLBLh_5.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\c5.png")));
            jLBLh_6.setIcon(new ImageIcon(getClass().getClassLoader().getResource("Human\\c6.png")));
            clearcorrect();
            jCHK_cor1.setSelected(true);
            jCHK_cor2.setSelected(true);
            jCHK_cor4.setSelected(true);
            jCHK_cor5.setSelected(true);
            jLBLhuman_img_text.setText("Select images with lion");
        }
        
    }
    private void clearcorrect(){
        jCHK_cor1.setSelected(false);
        jCHK_cor2.setSelected(false);
        jCHK_cor3.setSelected(false);
        jCHK_cor4.setSelected(false);
        jCHK_cor5.setSelected(false);
        jCHK_cor6.setSelected(false);
    }
    private void reload_captcha(){
        String it=jLBLhuman_txtdata.getText();
        String contain="abc";
        if(it.equals("a")){
            contain="bc";
        }
        if(it.equals("b")){
            contain="ac";
        }
        if(it.equals("c")){
            contain="ab";
        }
        Random rnd=new Random();
        StringBuilder sb=new StringBuilder(1);
        for(int i=0;i<1;i++){
        sb.append(contain.charAt(rnd.nextInt(contain.length())));
        }
        String random=sb.toString();
        jLBLhuman_txtdata.setText(random);
        if(random.equals("a")){
            jLBLcaptcha.setIcon(new ImageIcon(getClass().getClassLoader().getResource("capcha\\a.png")));
            jLBLcaptcha_cor.setText("v4xBG");
        }
        if(random.equals("b")){
            jLBLcaptcha.setIcon(new ImageIcon(getClass().getClassLoader().getResource("capcha\\b.jpg")));
            jLBLcaptcha_cor.setText("6Gv8IH");
        }
        if(random.equals("c")){
            jLBLcaptcha.setIcon(new ImageIcon(getClass().getClassLoader().getResource("capcha\\c.png")));
            jLBLcaptcha_cor.setText("iMKiZ");
    }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox jCHK_cor1;
    private javax.swing.JCheckBox jCHK_cor2;
    private javax.swing.JCheckBox jCHK_cor3;
    private javax.swing.JCheckBox jCHK_cor4;
    private javax.swing.JCheckBox jCHK_cor5;
    private javax.swing.JCheckBox jCHK_cor6;
    private javax.swing.JCheckBox jCHKage;
    private javax.swing.JCheckBox jCHKagree;
    private javax.swing.JCheckBox jCHKdob;
    private javax.swing.JCheckBox jCHKh_1;
    private javax.swing.JCheckBox jCHKh_2;
    private javax.swing.JCheckBox jCHKh_3;
    private javax.swing.JCheckBox jCHKh_4;
    private javax.swing.JCheckBox jCHKh_5;
    private javax.swing.JCheckBox jCHKh_6;
    private javax.swing.JCheckBox jCHKimg_verify;
    private javax.swing.JCheckBox jCHKp;
    private javax.swing.JCheckBox jCHKpd;
    private javax.swing.JCheckBox jCHKtc;
    private javax.swing.JCheckBox jCHKv;
    private javax.swing.JCheckBox jCHKverify_txt;
    private javax.swing.JCheckBox jCHKvis;
    private com.toedter.calendar.JDateChooser jDCdob;
    private javax.swing.JLabel jLBL_success_img;
    private javax.swing.JLabel jLBLagree;
    private javax.swing.JLabel jLBLback;
    private javax.swing.JLabel jLBLbrowse;
    private javax.swing.JLabel jLBLcaptcha;
    private javax.swing.JLabel jLBLcaptcha_cor;
    private javax.swing.JLabel jLBLcontain_data;
    private javax.swing.JLabel jLBLdob;
    private javax.swing.JLabel jLBLexit;
    private javax.swing.JLabel jLBLexit1;
    private javax.swing.JLabel jLBLexit2;
    private javax.swing.JLabel jLBLexit3;
    private javax.swing.JLabel jLBLf_i;
    private javax.swing.JLabel jLBLfemale;
    private javax.swing.JLabel jLBLh_1;
    private javax.swing.JLabel jLBLh_2;
    private javax.swing.JLabel jLBLh_3;
    private javax.swing.JLabel jLBLh_4;
    private javax.swing.JLabel jLBLh_5;
    private javax.swing.JLabel jLBLh_6;
    private javax.swing.JLabel jLBLhuman_img_text;
    private javax.swing.JLabel jLBLhuman_imgdata;
    private javax.swing.JLabel jLBLhuman_txtdata;
    private javax.swing.JLabel jLBLi_browse;
    private javax.swing.JLabel jLBLiagree;
    private javax.swing.JLabel jLBLimg_verification;
    private javax.swing.JLabel jLBLjavis_icon_signup;
    private javax.swing.JLabel jLBLl1;
    private javax.swing.JLabel jLBLl1_i;
    private javax.swing.JLabel jLBLl2;
    private javax.swing.JLabel jLBLl2_i;
    private javax.swing.JLabel jLBLl3;
    private javax.swing.JLabel jLBLl3_i;
    private javax.swing.JLabel jLBLl4;
    private javax.swing.JLabel jLBLl4_i;
    private javax.swing.JLabel jLBLl5;
    private javax.swing.JLabel jLBLl6;
    private javax.swing.JLabel jLBLl7;
    private javax.swing.JLabel jLBLl8;
    private javax.swing.JLabel jLBLm_i;
    private javax.swing.JLabel jLBLmale;
    private javax.swing.JLabel jLBLminimize;
    private javax.swing.JLabel jLBLminimize1;
    private javax.swing.JLabel jLBLminimize2;
    private javax.swing.JLabel jLBLminimize3;
    private javax.swing.JLabel jLBLn_age;
    private javax.swing.JLabel jLBLn_sex;
    private javax.swing.JLabel jLBLnext_p;
    private javax.swing.JLabel jLBLnext_pd;
    private javax.swing.JLabel jLBLnp;
    private javax.swing.JLabel jLBLosk;
    private javax.swing.JLabel jLBLosk1;
    private javax.swing.JLabel jLBLp_icon;
    private javax.swing.JLabel jLBLp_ind;
    private javax.swing.JLabel jLBLp_txt;
    private javax.swing.JLabel jLBLpd_icon;
    private javax.swing.JLabel jLBLpd_ind;
    private javax.swing.JLabel jLBLpd_txt;
    private javax.swing.JLabel jLBLprevious_p;
    private javax.swing.JLabel jLBLprevious_pd;
    private javax.swing.JLabel jLBLprevious_v;
    private javax.swing.JLabel jLBLprofile_pic;
    private javax.swing.JLabel jLBLproloc;
    private javax.swing.JLabel jLBLreload_captcha;
    private javax.swing.JLabel jLBLreload_img;
    private javax.swing.JLabel jLBLsignup;
    private javax.swing.JLabel jLBLsignup_icon;
    private javax.swing.JLabel jLBLt_i;
    private javax.swing.JLabel jLBLtc_icon;
    private javax.swing.JLabel jLBLtc_ind;
    private javax.swing.JLabel jLBLtc_javis_icon;
    private javax.swing.JLabel jLBLtc_project;
    private javax.swing.JLabel jLBLtc_txt;
    private javax.swing.JLabel jLBLtransgender;
    private javax.swing.JLabel jLBLuser_availability;
    private javax.swing.JLabel jLBLv_icon;
    private javax.swing.JLabel jLBLv_ind;
    private javax.swing.JLabel jLBLv_txt;
    private javax.swing.JLabel jLBLverification;
    private javax.swing.JLabel jLBLverified_txt;
    private javax.swing.JLabel jLBLverify_icon_img;
    private javax.swing.JLabel jLBLverify_icon_text;
    private javax.swing.JLabel jLBLverify_img;
    private javax.swing.JLabel jLBLverify_text;
    private javax.swing.JLabel jLBLvis;
    private javax.swing.JLabel jLBLvis1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField jPFpassword;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPback_p;
    private javax.swing.JPanel jPback_pd;
    private javax.swing.JPanel jPback_tc;
    private javax.swing.JPanel jPback_v;
    private javax.swing.JPanel jPbrowse;
    private javax.swing.JPanel jPfemale;
    private javax.swing.JPanel jPmale;
    private javax.swing.JPanel jPp;
    private javax.swing.JPanel jPpd;
    private javax.swing.JPanel jPprofie_browse;
    private javax.swing.JPanel jPprofile_pic;
    private javax.swing.JPanel jPsex;
    private javax.swing.JPanel jPsidepane;
    private javax.swing.JPanel jPsignup;
    private javax.swing.JPanel jPtc;
    private javax.swing.JPanel jPtransgender;
    private javax.swing.JPanel jPv;
    private javax.swing.JPanel jPverify_img;
    private javax.swing.JPanel jPverify_text;
    private javax.swing.JRadioButton jRBfem;
    private javax.swing.JRadioButton jRBmal;
    private javax.swing.JRadioButton jRBtra;
    private javax.swing.JSeparator jScaptcha;
    private javax.swing.JSeparator jSep_sn;
    private javax.swing.JSeparator jSepage;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSepdob;
    private javax.swing.JSeparator jSepf_n;
    private javax.swing.JSeparator jSepfn;
    private javax.swing.JSeparator jSepm_n;
    private javax.swing.JSeparator jSpassword;
    private javax.swing.JSeparator jSusername;
    private javax.swing.JSeparator jSusername1;
    private javax.swing.JTextField jTFage;
    private javax.swing.JTextField jTFcaptcha;
    private javax.swing.JTextField jTFdob;
    private javax.swing.JTextField jTFemail;
    private javax.swing.JTextField jTFf_name;
    private javax.swing.JTextField jTFfirst_name;
    private javax.swing.JTextField jTFlast_name;
    private javax.swing.JTextField jTFm_name;
    private javax.swing.JTextField jTFusername;
    // End of variables declaration//GEN-END:variables
//Global Variables:
Timer timer;
private ImageIcon profile_pic=null;
String filename=null;
int z=0;
byte[] person_image=null;

}
